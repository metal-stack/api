// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: metalstack/admin/v2/partition.proto

package adminv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/metal-stack/api/go/metalstack/api/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PartitionServiceCreateRequest is the request payload for a partition create request
type PartitionServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition the partition
	Partition     *v2.Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceCreateRequest) Reset() {
	*x = PartitionServiceCreateRequest{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceCreateRequest) ProtoMessage() {}

func (x *PartitionServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*PartitionServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionServiceCreateRequest) GetPartition() *v2.Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

// PartitionServiceUpdateRequest is the request payload for a partition update request
type PartitionServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of this partition
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// UpdatedAt is the date when this entity was updated
	// must be part of the update request to ensure optimistic locking
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Description of this partition
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// PartitionBootConfiguration defines how metal-hammer boots
	BootConfiguration *v2.PartitionBootConfiguration `protobuf:"bytes,4,opt,name=boot_configuration,json=bootConfiguration,proto3" json:"boot_configuration,omitempty"`
	// DNSServers for this partition
	DnsServer []*v2.DNSServer `protobuf:"bytes,5,rep,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	// NTPServers for this partition
	NtpServer []*v2.NTPServer `protobuf:"bytes,6,rep,name=ntp_server,json=ntpServer,proto3" json:"ntp_server,omitempty"`
	// ManagementServiceAddresses defines where the management is reachable
	// should be in the form <ip|host>:<port>
	MgmtServiceAddresses []string `protobuf:"bytes,7,rep,name=mgmt_service_addresses,json=mgmtServiceAddresses,proto3" json:"mgmt_service_addresses,omitempty"`
	// Labels to update on this network
	Labels        *v2.UpdateLabels `protobuf:"bytes,8,opt,name=labels,proto3,oneof" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceUpdateRequest) Reset() {
	*x = PartitionServiceUpdateRequest{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceUpdateRequest) ProtoMessage() {}

func (x *PartitionServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*PartitionServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionServiceUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PartitionServiceUpdateRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PartitionServiceUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PartitionServiceUpdateRequest) GetBootConfiguration() *v2.PartitionBootConfiguration {
	if x != nil {
		return x.BootConfiguration
	}
	return nil
}

func (x *PartitionServiceUpdateRequest) GetDnsServer() []*v2.DNSServer {
	if x != nil {
		return x.DnsServer
	}
	return nil
}

func (x *PartitionServiceUpdateRequest) GetNtpServer() []*v2.NTPServer {
	if x != nil {
		return x.NtpServer
	}
	return nil
}

func (x *PartitionServiceUpdateRequest) GetMgmtServiceAddresses() []string {
	if x != nil {
		return x.MgmtServiceAddresses
	}
	return nil
}

func (x *PartitionServiceUpdateRequest) GetLabels() *v2.UpdateLabels {
	if x != nil {
		return x.Labels
	}
	return nil
}

// PartitionServiceDeleteRequest is the request payload for a partition delete request
type PartitionServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the partition to get
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceDeleteRequest) Reset() {
	*x = PartitionServiceDeleteRequest{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceDeleteRequest) ProtoMessage() {}

func (x *PartitionServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*PartitionServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{2}
}

func (x *PartitionServiceDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// PartitionServiceCreateResponse is the response payload for a partition create request
type PartitionServiceCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition the partition
	Partition     *v2.Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceCreateResponse) Reset() {
	*x = PartitionServiceCreateResponse{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceCreateResponse) ProtoMessage() {}

func (x *PartitionServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*PartitionServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{3}
}

func (x *PartitionServiceCreateResponse) GetPartition() *v2.Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

// PartitionServiceUpdateResponse is the response payload for a partition update request
type PartitionServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition the partition
	Partition     *v2.Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceUpdateResponse) Reset() {
	*x = PartitionServiceUpdateResponse{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceUpdateResponse) ProtoMessage() {}

func (x *PartitionServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*PartitionServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{4}
}

func (x *PartitionServiceUpdateResponse) GetPartition() *v2.Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

// PartitionServiceCapacityResponse is the response payload for a partition delete request
type PartitionServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Partition the partition
	Partition     *v2.Partition `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceDeleteResponse) Reset() {
	*x = PartitionServiceDeleteResponse{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceDeleteResponse) ProtoMessage() {}

func (x *PartitionServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*PartitionServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{5}
}

func (x *PartitionServiceDeleteResponse) GetPartition() *v2.Partition {
	if x != nil {
		return x.Partition
	}
	return nil
}

// PartitionServiceListRequest is the request payload for a partition capacity request
type PartitionServiceCapacityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the partition to get
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Size of machines to show the capacity
	Size *string `protobuf:"bytes,2,opt,name=size,proto3,oneof" json:"size,omitempty"`
	// Project of machines to show the capacity
	Project       *string `protobuf:"bytes,3,opt,name=project,proto3,oneof" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionServiceCapacityRequest) Reset() {
	*x = PartitionServiceCapacityRequest{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceCapacityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceCapacityRequest) ProtoMessage() {}

func (x *PartitionServiceCapacityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceCapacityRequest.ProtoReflect.Descriptor instead.
func (*PartitionServiceCapacityRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{6}
}

func (x *PartitionServiceCapacityRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PartitionServiceCapacityRequest) GetSize() string {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return ""
}

func (x *PartitionServiceCapacityRequest) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

// PartitionServiceCapacityResponse is the response payload for a partition capacity request
type PartitionServiceCapacityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size is the size id correlating to all counts in this server capacity.
	Size string `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	// Total is the total amount of machines for this size.
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// PhonedHome is the amount of machines that are currently in the provisioning state "phoned home".
	PhonedHome int64 `protobuf:"varint,3,opt,name=phoned_home,json=phonedHome,proto3" json:"phoned_home,omitempty"`
	// Waiting is the amount of machines that are currently in the provisioning state "waiting".
	Waiting int64 `protobuf:"varint,4,opt,name=waiting,proto3" json:"waiting,omitempty"`
	// Other is the amount of machines that are neither in the provisioning state waiting nor in phoned home but in another provisioning state.
	Other int64 `protobuf:"varint,5,opt,name=other,proto3" json:"other,omitempty"`
	// OtherMachines contains the machine IDs for machines that were classified into "Other".
	OtherMachines []string `protobuf:"bytes,6,rep,name=other_machines,json=otherMachines,proto3" json:"other_machines,omitempty"`
	// Allocated is the amount of machines that are currently allocated.
	Allocated int64 `protobuf:"varint,7,opt,name=allocated,proto3" json:"allocated,omitempty"`
	// Allocatable is the amount of machines in a partition is the amount of machines that can be allocated.
	// Effectively this is the amount of waiting machines minus the machines that are unavailable due to machine state or un-allocatable. Size reservations are not considered in this count.
	Allocatable int64 `protobuf:"varint,8,opt,name=allocatable,proto3" json:"allocatable,omitempty"`
	// Free is the amount of machines in a partition that can be freely allocated at any given moment by a project.
	// Effectively this is the amount of waiting machines minus the machines that are unavailable due to machine state or un-allocatable due to size reservations.
	Free int64 `protobuf:"varint,9,opt,name=free,proto3" json:"free,omitempty"`
	// Unavailable is the amount of machine in a partition that are currently not allocatable because they are not waiting or
	// not in the machine state "available", e.g. locked or reserved.
	Unavailable int64 `protobuf:"varint,10,opt,name=unavailable,proto3" json:"unavailable,omitempty"`
	// Faulty is the amount of machines that are neither allocated nor in the pool of available machines because they report an error.
	Faulty int64 `protobuf:"varint,11,opt,name=faulty,proto3" json:"faulty,omitempty"`
	// FaultyMachines contains the machine IDs for machines that were classified into "Faulty".
	FaultyMachines []string `protobuf:"bytes,12,rep,name=faulty_machines,json=faultyMachines,proto3" json:"faulty_machines,omitempty"`
	// Reservations is the amount of reservations made for this size.
	Reservations int64 `protobuf:"varint,13,opt,name=reservations,proto3" json:"reservations,omitempty"`
	// UsedReservations is the amount of reservations already used up for this size.
	UsedReservations int64 `protobuf:"varint,14,opt,name=used_reservations,json=usedReservations,proto3" json:"used_reservations,omitempty"`
	// RemainingReservations is the amount of reservations remaining for this size.
	RemainingReservations int64 `protobuf:"varint,15,opt,name=remaining_reservations,json=remainingReservations,proto3" json:"remaining_reservations,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PartitionServiceCapacityResponse) Reset() {
	*x = PartitionServiceCapacityResponse{}
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionServiceCapacityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionServiceCapacityResponse) ProtoMessage() {}

func (x *PartitionServiceCapacityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_partition_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionServiceCapacityResponse.ProtoReflect.Descriptor instead.
func (*PartitionServiceCapacityResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_partition_proto_rawDescGZIP(), []int{7}
}

func (x *PartitionServiceCapacityResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PartitionServiceCapacityResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetPhonedHome() int64 {
	if x != nil {
		return x.PhonedHome
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetWaiting() int64 {
	if x != nil {
		return x.Waiting
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetOther() int64 {
	if x != nil {
		return x.Other
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetOtherMachines() []string {
	if x != nil {
		return x.OtherMachines
	}
	return nil
}

func (x *PartitionServiceCapacityResponse) GetAllocated() int64 {
	if x != nil {
		return x.Allocated
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetAllocatable() int64 {
	if x != nil {
		return x.Allocatable
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetFree() int64 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetUnavailable() int64 {
	if x != nil {
		return x.Unavailable
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetFaulty() int64 {
	if x != nil {
		return x.Faulty
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetFaultyMachines() []string {
	if x != nil {
		return x.FaultyMachines
	}
	return nil
}

func (x *PartitionServiceCapacityResponse) GetReservations() int64 {
	if x != nil {
		return x.Reservations
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetUsedReservations() int64 {
	if x != nil {
		return x.UsedReservations
	}
	return 0
}

func (x *PartitionServiceCapacityResponse) GetRemainingReservations() int64 {
	if x != nil {
		return x.RemainingReservations
	}
	return 0
}

var File_metalstack_admin_v2_partition_proto protoreflect.FileDescriptor

const file_metalstack_admin_v2_partition_proto_rawDesc = "" +
	"\n" +
	"#metalstack/admin/v2/partition.proto\x12\x13metalstack.admin.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1emetalstack/api/v2/common.proto\x1a!metalstack/api/v2/partition.proto\"[\n" +
	"\x1dPartitionServiceCreateRequest\x12:\n" +
	"\tpartition\x18\x01 \x01(\v2\x1c.metalstack.api.v2.PartitionR\tpartition\"\xa2\x04\n" +
	"\x1dPartitionServiceUpdateRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x129\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12/\n" +
	"\vdescription\x18\x03 \x01(\tB\b\xbaH\x05r\x03\x18\x80\x01H\x00R\vdescription\x88\x01\x01\x12\\\n" +
	"\x12boot_configuration\x18\x04 \x01(\v2-.metalstack.api.v2.PartitionBootConfigurationR\x11bootConfiguration\x12E\n" +
	"\n" +
	"dns_server\x18\x05 \x03(\v2\x1c.metalstack.api.v2.DNSServerB\b\xbaH\x05\x92\x01\x02\x10\x03R\tdnsServer\x12E\n" +
	"\n" +
	"ntp_server\x18\x06 \x03(\v2\x1c.metalstack.api.v2.NTPServerB\b\xbaH\x05\x92\x01\x02\x10\n" +
	"R\tntpServer\x124\n" +
	"\x16mgmt_service_addresses\x18\a \x03(\tR\x14mgmtServiceAddresses\x12<\n" +
	"\x06labels\x18\b \x01(\v2\x1f.metalstack.api.v2.UpdateLabelsH\x01R\x06labels\x88\x01\x01B\x0e\n" +
	"\f_descriptionB\t\n" +
	"\a_labels\";\n" +
	"\x1dPartitionServiceDeleteRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\"\\\n" +
	"\x1ePartitionServiceCreateResponse\x12:\n" +
	"\tpartition\x18\x01 \x01(\v2\x1c.metalstack.api.v2.PartitionR\tpartition\"\\\n" +
	"\x1ePartitionServiceUpdateResponse\x12:\n" +
	"\tpartition\x18\x01 \x01(\v2\x1c.metalstack.api.v2.PartitionR\tpartition\"\\\n" +
	"\x1ePartitionServiceDeleteResponse\x12:\n" +
	"\tpartition\x18\x01 \x01(\v2\x1c.metalstack.api.v2.PartitionR\tpartition\"\xac\x01\n" +
	"\x1fPartitionServiceCapacityRequest\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x02id\x88\x01\x01\x12#\n" +
	"\x04size\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\x04size\x88\x01\x01\x12'\n" +
	"\aproject\x18\x03 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x02R\aproject\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_sizeB\n" +
	"\n" +
	"\b_project\"\x83\x04\n" +
	" PartitionServiceCapacityResponse\x12\x12\n" +
	"\x04size\x18\x01 \x01(\tR\x04size\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x1f\n" +
	"\vphoned_home\x18\x03 \x01(\x03R\n" +
	"phonedHome\x12\x18\n" +
	"\awaiting\x18\x04 \x01(\x03R\awaiting\x12\x14\n" +
	"\x05other\x18\x05 \x01(\x03R\x05other\x12%\n" +
	"\x0eother_machines\x18\x06 \x03(\tR\rotherMachines\x12\x1c\n" +
	"\tallocated\x18\a \x01(\x03R\tallocated\x12 \n" +
	"\vallocatable\x18\b \x01(\x03R\vallocatable\x12\x12\n" +
	"\x04free\x18\t \x01(\x03R\x04free\x12 \n" +
	"\vunavailable\x18\n" +
	" \x01(\x03R\vunavailable\x12\x16\n" +
	"\x06faulty\x18\v \x01(\x03R\x06faulty\x12'\n" +
	"\x0ffaulty_machines\x18\f \x03(\tR\x0efaultyMachines\x12\"\n" +
	"\freservations\x18\r \x01(\x03R\freservations\x12+\n" +
	"\x11used_reservations\x18\x0e \x01(\x03R\x10usedReservations\x125\n" +
	"\x16remaining_reservations\x18\x0f \x01(\x03R\x15remainingReservations2\x92\x04\n" +
	"\x10PartitionService\x12|\n" +
	"\x06Create\x122.metalstack.admin.v2.PartitionServiceCreateRequest\x1a3.metalstack.admin.v2.PartitionServiceCreateResponse\"\t\xd2\xf3\x18\x01\x01\xe0\xf3\x18\x01\x12|\n" +
	"\x06Update\x122.metalstack.admin.v2.PartitionServiceUpdateRequest\x1a3.metalstack.admin.v2.PartitionServiceUpdateResponse\"\t\xd2\xf3\x18\x01\x01\xe0\xf3\x18\x01\x12|\n" +
	"\x06Delete\x122.metalstack.admin.v2.PartitionServiceDeleteRequest\x1a3.metalstack.admin.v2.PartitionServiceDeleteResponse\"\t\xd2\xf3\x18\x01\x01\xe0\xf3\x18\x01\x12\x83\x01\n" +
	"\bCapacity\x124.metalstack.admin.v2.PartitionServiceCapacityRequest\x1a5.metalstack.admin.v2.PartitionServiceCapacityResponse\"\n" +
	"\xd2\xf3\x18\x02\x02\x01\xe0\xf3\x18\x02B\xd2\x01\n" +
	"\x17com.metalstack.admin.v2B\x0ePartitionProtoP\x01Z9github.com/metal-stack/api/go/metalstack/admin/v2;adminv2\xa2\x02\x03MAX\xaa\x02\x13Metalstack.Admin.V2\xca\x02\x13Metalstack\\Admin\\V2\xe2\x02\x1fMetalstack\\Admin\\V2\\GPBMetadata\xea\x02\x15Metalstack::Admin::V2b\x06proto3"

var (
	file_metalstack_admin_v2_partition_proto_rawDescOnce sync.Once
	file_metalstack_admin_v2_partition_proto_rawDescData []byte
)

func file_metalstack_admin_v2_partition_proto_rawDescGZIP() []byte {
	file_metalstack_admin_v2_partition_proto_rawDescOnce.Do(func() {
		file_metalstack_admin_v2_partition_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_partition_proto_rawDesc), len(file_metalstack_admin_v2_partition_proto_rawDesc)))
	})
	return file_metalstack_admin_v2_partition_proto_rawDescData
}

var file_metalstack_admin_v2_partition_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_metalstack_admin_v2_partition_proto_goTypes = []any{
	(*PartitionServiceCreateRequest)(nil),    // 0: metalstack.admin.v2.PartitionServiceCreateRequest
	(*PartitionServiceUpdateRequest)(nil),    // 1: metalstack.admin.v2.PartitionServiceUpdateRequest
	(*PartitionServiceDeleteRequest)(nil),    // 2: metalstack.admin.v2.PartitionServiceDeleteRequest
	(*PartitionServiceCreateResponse)(nil),   // 3: metalstack.admin.v2.PartitionServiceCreateResponse
	(*PartitionServiceUpdateResponse)(nil),   // 4: metalstack.admin.v2.PartitionServiceUpdateResponse
	(*PartitionServiceDeleteResponse)(nil),   // 5: metalstack.admin.v2.PartitionServiceDeleteResponse
	(*PartitionServiceCapacityRequest)(nil),  // 6: metalstack.admin.v2.PartitionServiceCapacityRequest
	(*PartitionServiceCapacityResponse)(nil), // 7: metalstack.admin.v2.PartitionServiceCapacityResponse
	(*v2.Partition)(nil),                     // 8: metalstack.api.v2.Partition
	(*timestamppb.Timestamp)(nil),            // 9: google.protobuf.Timestamp
	(*v2.PartitionBootConfiguration)(nil),    // 10: metalstack.api.v2.PartitionBootConfiguration
	(*v2.DNSServer)(nil),                     // 11: metalstack.api.v2.DNSServer
	(*v2.NTPServer)(nil),                     // 12: metalstack.api.v2.NTPServer
	(*v2.UpdateLabels)(nil),                  // 13: metalstack.api.v2.UpdateLabels
}
var file_metalstack_admin_v2_partition_proto_depIdxs = []int32{
	8,  // 0: metalstack.admin.v2.PartitionServiceCreateRequest.partition:type_name -> metalstack.api.v2.Partition
	9,  // 1: metalstack.admin.v2.PartitionServiceUpdateRequest.updated_at:type_name -> google.protobuf.Timestamp
	10, // 2: metalstack.admin.v2.PartitionServiceUpdateRequest.boot_configuration:type_name -> metalstack.api.v2.PartitionBootConfiguration
	11, // 3: metalstack.admin.v2.PartitionServiceUpdateRequest.dns_server:type_name -> metalstack.api.v2.DNSServer
	12, // 4: metalstack.admin.v2.PartitionServiceUpdateRequest.ntp_server:type_name -> metalstack.api.v2.NTPServer
	13, // 5: metalstack.admin.v2.PartitionServiceUpdateRequest.labels:type_name -> metalstack.api.v2.UpdateLabels
	8,  // 6: metalstack.admin.v2.PartitionServiceCreateResponse.partition:type_name -> metalstack.api.v2.Partition
	8,  // 7: metalstack.admin.v2.PartitionServiceUpdateResponse.partition:type_name -> metalstack.api.v2.Partition
	8,  // 8: metalstack.admin.v2.PartitionServiceDeleteResponse.partition:type_name -> metalstack.api.v2.Partition
	0,  // 9: metalstack.admin.v2.PartitionService.Create:input_type -> metalstack.admin.v2.PartitionServiceCreateRequest
	1,  // 10: metalstack.admin.v2.PartitionService.Update:input_type -> metalstack.admin.v2.PartitionServiceUpdateRequest
	2,  // 11: metalstack.admin.v2.PartitionService.Delete:input_type -> metalstack.admin.v2.PartitionServiceDeleteRequest
	6,  // 12: metalstack.admin.v2.PartitionService.Capacity:input_type -> metalstack.admin.v2.PartitionServiceCapacityRequest
	3,  // 13: metalstack.admin.v2.PartitionService.Create:output_type -> metalstack.admin.v2.PartitionServiceCreateResponse
	4,  // 14: metalstack.admin.v2.PartitionService.Update:output_type -> metalstack.admin.v2.PartitionServiceUpdateResponse
	5,  // 15: metalstack.admin.v2.PartitionService.Delete:output_type -> metalstack.admin.v2.PartitionServiceDeleteResponse
	7,  // 16: metalstack.admin.v2.PartitionService.Capacity:output_type -> metalstack.admin.v2.PartitionServiceCapacityResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_metalstack_admin_v2_partition_proto_init() }
func file_metalstack_admin_v2_partition_proto_init() {
	if File_metalstack_admin_v2_partition_proto != nil {
		return
	}
	file_metalstack_admin_v2_partition_proto_msgTypes[1].OneofWrappers = []any{}
	file_metalstack_admin_v2_partition_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_partition_proto_rawDesc), len(file_metalstack_admin_v2_partition_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_admin_v2_partition_proto_goTypes,
		DependencyIndexes: file_metalstack_admin_v2_partition_proto_depIdxs,
		MessageInfos:      file_metalstack_admin_v2_partition_proto_msgTypes,
	}.Build()
	File_metalstack_admin_v2_partition_proto = out.File
	file_metalstack_admin_v2_partition_proto_goTypes = nil
	file_metalstack_admin_v2_partition_proto_depIdxs = nil
}
