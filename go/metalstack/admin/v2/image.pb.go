// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: metalstack/admin/v2/image.proto

package adminv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/metal-stack/api/go/metalstack/api/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ImageServiceCreateRequest
type ImageServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image is the image
	Image         *v2.Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceCreateRequest) Reset() {
	*x = ImageServiceCreateRequest{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceCreateRequest) ProtoMessage() {}

func (x *ImageServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{0}
}

func (x *ImageServiceCreateRequest) GetImage() *v2.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceCreateResponse
type ImageServiceCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image is the image
	Image         *v2.Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceCreateResponse) Reset() {
	*x = ImageServiceCreateResponse{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceCreateResponse) ProtoMessage() {}

func (x *ImageServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageServiceCreateResponse) GetImage() *v2.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceUpdateRequest
type ImageServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image is the image
	Image         *v2.Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceUpdateRequest) Reset() {
	*x = ImageServiceUpdateRequest{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceUpdateRequest) ProtoMessage() {}

func (x *ImageServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{2}
}

func (x *ImageServiceUpdateRequest) GetImage() *v2.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceUpdateResponse
type ImageServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image is the image
	Image         *v2.Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceUpdateResponse) Reset() {
	*x = ImageServiceUpdateResponse{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceUpdateResponse) ProtoMessage() {}

func (x *ImageServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{3}
}

func (x *ImageServiceUpdateResponse) GetImage() *v2.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceDeleteRequest
type ImageServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to delete
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceDeleteRequest) Reset() {
	*x = ImageServiceDeleteRequest{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceDeleteRequest) ProtoMessage() {}

func (x *ImageServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{4}
}

func (x *ImageServiceDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// message ImageServiceDeleteResponse {
type ImageServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ImageLayout the imagelayout
	Image         *v2.Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceDeleteResponse) Reset() {
	*x = ImageServiceDeleteResponse{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceDeleteResponse) ProtoMessage() {}

func (x *ImageServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{5}
}

func (x *ImageServiceDeleteResponse) GetImage() *v2.Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceUsageRequest
type ImageServiceUsageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query for which images the usage should be reported
	Query         *v2.ImageQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceUsageRequest) Reset() {
	*x = ImageServiceUsageRequest{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceUsageRequest) ProtoMessage() {}

func (x *ImageServiceUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceUsageRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceUsageRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{6}
}

func (x *ImageServiceUsageRequest) GetQuery() *v2.ImageQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// ImageServiceUsageResponse
type ImageServiceUsageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Images with usage
	ImageUsage    []*v2.ImageUsage `protobuf:"bytes,1,rep,name=image_usage,json=imageUsage,proto3" json:"image_usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceUsageResponse) Reset() {
	*x = ImageServiceUsageResponse{}
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceUsageResponse) ProtoMessage() {}

func (x *ImageServiceUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_image_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceUsageResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceUsageResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_image_proto_rawDescGZIP(), []int{7}
}

func (x *ImageServiceUsageResponse) GetImageUsage() []*v2.ImageUsage {
	if x != nil {
		return x.ImageUsage
	}
	return nil
}

var File_metalstack_admin_v2_image_proto protoreflect.FileDescriptor

var file_metalstack_admin_v2_image_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x19, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x4c, 0x0a, 0x1a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a,
	0x19, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x1a, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x80, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4c, 0x0a, 0x1a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x4f, 0x0a, 0x18, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x22, 0x5b, 0x0a, 0x19, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x32, 0xe0, 0x03,
	0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xd2, 0xf3, 0x18, 0x01, 0x01,
	0xe0, 0xf3, 0x18, 0x01, 0x12, 0x74, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x09, 0xd2, 0xf3, 0x18, 0x01, 0x01, 0xe0, 0xf3, 0x18, 0x01, 0x12, 0x74, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0xd2, 0xf3, 0x18, 0x01, 0x01, 0xe0, 0xf3, 0x18, 0x01,
	0x12, 0x6e, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0xd2, 0xf3, 0x18, 0x02, 0x01, 0x02,
	0x42, 0xce, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x32, 0x42, 0x0a, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x6c, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x13, 0x4d, 0x65,
	0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x56,
	0x32, 0xca, 0x02, 0x13, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5c, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1f, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x4d, 0x65, 0x74, 0x61,
	0x6c, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x3a, 0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x3a, 0x3a, 0x56,
	0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_metalstack_admin_v2_image_proto_rawDescOnce sync.Once
	file_metalstack_admin_v2_image_proto_rawDescData []byte
)

func file_metalstack_admin_v2_image_proto_rawDescGZIP() []byte {
	file_metalstack_admin_v2_image_proto_rawDescOnce.Do(func() {
		file_metalstack_admin_v2_image_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_image_proto_rawDesc), len(file_metalstack_admin_v2_image_proto_rawDesc)))
	})
	return file_metalstack_admin_v2_image_proto_rawDescData
}

var file_metalstack_admin_v2_image_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_metalstack_admin_v2_image_proto_goTypes = []any{
	(*ImageServiceCreateRequest)(nil),  // 0: metalstack.admin.v2.ImageServiceCreateRequest
	(*ImageServiceCreateResponse)(nil), // 1: metalstack.admin.v2.ImageServiceCreateResponse
	(*ImageServiceUpdateRequest)(nil),  // 2: metalstack.admin.v2.ImageServiceUpdateRequest
	(*ImageServiceUpdateResponse)(nil), // 3: metalstack.admin.v2.ImageServiceUpdateResponse
	(*ImageServiceDeleteRequest)(nil),  // 4: metalstack.admin.v2.ImageServiceDeleteRequest
	(*ImageServiceDeleteResponse)(nil), // 5: metalstack.admin.v2.ImageServiceDeleteResponse
	(*ImageServiceUsageRequest)(nil),   // 6: metalstack.admin.v2.ImageServiceUsageRequest
	(*ImageServiceUsageResponse)(nil),  // 7: metalstack.admin.v2.ImageServiceUsageResponse
	(*v2.Image)(nil),                   // 8: metalstack.api.v2.Image
	(*v2.ImageQuery)(nil),              // 9: metalstack.api.v2.ImageQuery
	(*v2.ImageUsage)(nil),              // 10: metalstack.api.v2.ImageUsage
}
var file_metalstack_admin_v2_image_proto_depIdxs = []int32{
	8,  // 0: metalstack.admin.v2.ImageServiceCreateRequest.image:type_name -> metalstack.api.v2.Image
	8,  // 1: metalstack.admin.v2.ImageServiceCreateResponse.image:type_name -> metalstack.api.v2.Image
	8,  // 2: metalstack.admin.v2.ImageServiceUpdateRequest.image:type_name -> metalstack.api.v2.Image
	8,  // 3: metalstack.admin.v2.ImageServiceUpdateResponse.image:type_name -> metalstack.api.v2.Image
	8,  // 4: metalstack.admin.v2.ImageServiceDeleteResponse.image:type_name -> metalstack.api.v2.Image
	9,  // 5: metalstack.admin.v2.ImageServiceUsageRequest.query:type_name -> metalstack.api.v2.ImageQuery
	10, // 6: metalstack.admin.v2.ImageServiceUsageResponse.image_usage:type_name -> metalstack.api.v2.ImageUsage
	0,  // 7: metalstack.admin.v2.ImageService.Create:input_type -> metalstack.admin.v2.ImageServiceCreateRequest
	2,  // 8: metalstack.admin.v2.ImageService.Update:input_type -> metalstack.admin.v2.ImageServiceUpdateRequest
	4,  // 9: metalstack.admin.v2.ImageService.Delete:input_type -> metalstack.admin.v2.ImageServiceDeleteRequest
	6,  // 10: metalstack.admin.v2.ImageService.Usage:input_type -> metalstack.admin.v2.ImageServiceUsageRequest
	1,  // 11: metalstack.admin.v2.ImageService.Create:output_type -> metalstack.admin.v2.ImageServiceCreateResponse
	3,  // 12: metalstack.admin.v2.ImageService.Update:output_type -> metalstack.admin.v2.ImageServiceUpdateResponse
	5,  // 13: metalstack.admin.v2.ImageService.Delete:output_type -> metalstack.admin.v2.ImageServiceDeleteResponse
	7,  // 14: metalstack.admin.v2.ImageService.Usage:output_type -> metalstack.admin.v2.ImageServiceUsageResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_metalstack_admin_v2_image_proto_init() }
func file_metalstack_admin_v2_image_proto_init() {
	if File_metalstack_admin_v2_image_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_image_proto_rawDesc), len(file_metalstack_admin_v2_image_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_admin_v2_image_proto_goTypes,
		DependencyIndexes: file_metalstack_admin_v2_image_proto_depIdxs,
		MessageInfos:      file_metalstack_admin_v2_image_proto_msgTypes,
	}.Build()
	File_metalstack_admin_v2_image_proto = out.File
	file_metalstack_admin_v2_image_proto_goTypes = nil
	file_metalstack_admin_v2_image_proto_depIdxs = nil
}
