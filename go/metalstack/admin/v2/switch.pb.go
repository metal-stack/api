// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: metalstack/admin/v2/switch.proto

package adminv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/metal-stack/api/go/metalstack/api/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SwitchServiceGetRequest.
type SwitchServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the switch to get.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceGetRequest) Reset() {
	*x = SwitchServiceGetRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceGetRequest) ProtoMessage() {}

func (x *SwitchServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceGetRequest.ProtoReflect.Descriptor instead.
func (*SwitchServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{0}
}

func (x *SwitchServiceGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SwitchServiceGetResponse.
type SwitchServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switch that was requested.
	Switch        *v2.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceGetResponse) Reset() {
	*x = SwitchServiceGetResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceGetResponse) ProtoMessage() {}

func (x *SwitchServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceGetResponse.ProtoReflect.Descriptor instead.
func (*SwitchServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{1}
}

func (x *SwitchServiceGetResponse) GetSwitch() *v2.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

// SwitchServiceListRequest.
type SwitchServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query to filter the results.
	Query         *v2.SwitchQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceListRequest) Reset() {
	*x = SwitchServiceListRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceListRequest) ProtoMessage() {}

func (x *SwitchServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceListRequest.ProtoReflect.Descriptor instead.
func (*SwitchServiceListRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{2}
}

func (x *SwitchServiceListRequest) GetQuery() *v2.SwitchQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// SwitchServiceListResponse.
type SwitchServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switches that match the request query.
	Switches      []*v2.Switch `protobuf:"bytes,1,rep,name=switches,proto3" json:"switches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceListResponse) Reset() {
	*x = SwitchServiceListResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceListResponse) ProtoMessage() {}

func (x *SwitchServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceListResponse.ProtoReflect.Descriptor instead.
func (*SwitchServiceListResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{3}
}

func (x *SwitchServiceListResponse) GetSwitches() []*v2.Switch {
	if x != nil {
		return x.Switches
	}
	return nil
}

// SwitchServiceUpdateRequest.
type SwitchServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the switch.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Description of the switch.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Rack ID if the switch resides in a rack.
	RackId *string `protobuf:"bytes,3,opt,name=rack_id,json=rackId,proto3,oneof" json:"rack_id,omitempty"`
	// Replace mode is used to mark a switch ready for replacement.
	ReplaceMode v2.SwitchReplaceMode `protobuf:"varint,4,opt,name=replace_mode,json=replaceMode,proto3,enum=metalstack.api.v2.SwitchReplaceMode" json:"replace_mode,omitempty"`
	// Management IP is the switch's IP for management access.
	ManagementIp string `protobuf:"bytes,5,opt,name=management_ip,json=managementIp,proto3" json:"management_ip,omitempty"`
	// Management user is the user name to use for management access.
	ManagementUser string `protobuf:"bytes,6,opt,name=management_user,json=managementUser,proto3" json:"management_user,omitempty"`
	// Console command is the command for accessing the switch's console.
	ConsoleCommand string `protobuf:"bytes,7,opt,name=console_command,json=consoleCommand,proto3" json:"console_command,omitempty"`
	// Nics are the front panel ports of the switch.
	Nics []*v2.Nic `protobuf:"bytes,8,rep,name=nics,proto3" json:"nics,omitempty"`
	// Switch OS is the OS running on the switch.
	Os            *v2.SwitchOS `protobuf:"bytes,9,opt,name=os,proto3" json:"os,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceUpdateRequest) Reset() {
	*x = SwitchServiceUpdateRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceUpdateRequest) ProtoMessage() {}

func (x *SwitchServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*SwitchServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{4}
}

func (x *SwitchServiceUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetRackId() string {
	if x != nil && x.RackId != nil {
		return *x.RackId
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetReplaceMode() v2.SwitchReplaceMode {
	if x != nil {
		return x.ReplaceMode
	}
	return v2.SwitchReplaceMode(0)
}

func (x *SwitchServiceUpdateRequest) GetManagementIp() string {
	if x != nil {
		return x.ManagementIp
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetManagementUser() string {
	if x != nil {
		return x.ManagementUser
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetConsoleCommand() string {
	if x != nil {
		return x.ConsoleCommand
	}
	return ""
}

func (x *SwitchServiceUpdateRequest) GetNics() []*v2.Nic {
	if x != nil {
		return x.Nics
	}
	return nil
}

func (x *SwitchServiceUpdateRequest) GetOs() *v2.SwitchOS {
	if x != nil {
		return x.Os
	}
	return nil
}

// SwitchServiceUpdateResponse.
type SwitchServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switch that was updated.
	Switch        *v2.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceUpdateResponse) Reset() {
	*x = SwitchServiceUpdateResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceUpdateResponse) ProtoMessage() {}

func (x *SwitchServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*SwitchServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{5}
}

func (x *SwitchServiceUpdateResponse) GetSwitch() *v2.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

// SwitchServiceDeleteRequest.
type SwitchServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the switch.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceDeleteRequest) Reset() {
	*x = SwitchServiceDeleteRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceDeleteRequest) ProtoMessage() {}

func (x *SwitchServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*SwitchServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{6}
}

func (x *SwitchServiceDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SwitchServiceDeleteResponse.
type SwitchServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switch that has been deleted.
	Switch        *v2.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceDeleteResponse) Reset() {
	*x = SwitchServiceDeleteResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceDeleteResponse) ProtoMessage() {}

func (x *SwitchServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*SwitchServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{7}
}

func (x *SwitchServiceDeleteResponse) GetSwitch() *v2.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

// SwitchServiceMigrateRequest.
type SwitchServiceMigrateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OldSwitch which to migrate away from.
	OldSwitch string `protobuf:"bytes,1,opt,name=old_switch,json=oldSwitch,proto3" json:"old_switch,omitempty"`
	// NewSwitch which to migrate to.
	NewSwitch     string `protobuf:"bytes,2,opt,name=new_switch,json=newSwitch,proto3" json:"new_switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceMigrateRequest) Reset() {
	*x = SwitchServiceMigrateRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceMigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceMigrateRequest) ProtoMessage() {}

func (x *SwitchServiceMigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceMigrateRequest.ProtoReflect.Descriptor instead.
func (*SwitchServiceMigrateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchServiceMigrateRequest) GetOldSwitch() string {
	if x != nil {
		return x.OldSwitch
	}
	return ""
}

func (x *SwitchServiceMigrateRequest) GetNewSwitch() string {
	if x != nil {
		return x.NewSwitch
	}
	return ""
}

// SwitchServiceMigrateResponse.
type SwitchServiceMigrateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switch that was migrated to.
	Switch        *v2.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServiceMigrateResponse) Reset() {
	*x = SwitchServiceMigrateResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServiceMigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServiceMigrateResponse) ProtoMessage() {}

func (x *SwitchServiceMigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServiceMigrateResponse.ProtoReflect.Descriptor instead.
func (*SwitchServiceMigrateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{9}
}

func (x *SwitchServiceMigrateResponse) GetSwitch() *v2.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

// SwitchServicePortRequest.
type SwitchServicePortRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the switch.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// NicName of the port whose status should be changed.
	NicName string `protobuf:"bytes,2,opt,name=nic_name,json=nicName,proto3" json:"nic_name,omitempty"`
	// Status that the port should have.
	Status        v2.SwitchPortStatus `protobuf:"varint,3,opt,name=status,proto3,enum=metalstack.api.v2.SwitchPortStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServicePortRequest) Reset() {
	*x = SwitchServicePortRequest{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServicePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServicePortRequest) ProtoMessage() {}

func (x *SwitchServicePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServicePortRequest.ProtoReflect.Descriptor instead.
func (*SwitchServicePortRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{10}
}

func (x *SwitchServicePortRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchServicePortRequest) GetNicName() string {
	if x != nil {
		return x.NicName
	}
	return ""
}

func (x *SwitchServicePortRequest) GetStatus() v2.SwitchPortStatus {
	if x != nil {
		return x.Status
	}
	return v2.SwitchPortStatus(0)
}

// SwitchServicePortResponse.
type SwitchServicePortResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Switch after the port status toggle..
	Switch        *v2.Switch `protobuf:"bytes,1,opt,name=switch,proto3" json:"switch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchServicePortResponse) Reset() {
	*x = SwitchServicePortResponse{}
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchServicePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchServicePortResponse) ProtoMessage() {}

func (x *SwitchServicePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_admin_v2_switch_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchServicePortResponse.ProtoReflect.Descriptor instead.
func (*SwitchServicePortResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_admin_v2_switch_proto_rawDescGZIP(), []int{11}
}

func (x *SwitchServicePortResponse) GetSwitch() *v2.Switch {
	if x != nil {
		return x.Switch
	}
	return nil
}

var File_metalstack_admin_v2_switch_proto protoreflect.FileDescriptor

const file_metalstack_admin_v2_switch_proto_rawDesc = "" +
	"\n" +
	" metalstack/admin/v2/switch.proto\x12\x13metalstack.admin.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1emetalstack/api/v2/common.proto\x1a\x1emetalstack/api/v2/switch.proto\"7\n" +
	"\x17SwitchServiceGetRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\x02id\"M\n" +
	"\x18SwitchServiceGetResponse\x121\n" +
	"\x06switch\x18\x01 \x01(\v2\x19.metalstack.api.v2.SwitchR\x06switch\"P\n" +
	"\x18SwitchServiceListRequest\x124\n" +
	"\x05query\x18\x01 \x01(\v2\x1e.metalstack.api.v2.SwitchQueryR\x05query\"R\n" +
	"\x19SwitchServiceListResponse\x125\n" +
	"\bswitches\x18\x01 \x03(\v2\x19.metalstack.api.v2.SwitchR\bswitches\"\xe2\x03\n" +
	"\x1aSwitchServiceUpdateRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\x02id\x12,\n" +
	"\vdescription\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\vdescription\x12(\n" +
	"\arack_id\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x06rackId\x88\x01\x01\x12Q\n" +
	"\freplace_mode\x18\x04 \x01(\x0e2$.metalstack.api.v2.SwitchReplaceModeB\b\xbaH\x05\x82\x01\x02\x10\x01R\vreplaceMode\x12,\n" +
	"\rmanagement_ip\x18\x05 \x01(\tB\a\xbaH\x04r\x02p\x01R\fmanagementIp\x123\n" +
	"\x0fmanagement_user\x18\x06 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x0emanagementUser\x123\n" +
	"\x0fconsole_command\x18\a \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x0econsoleCommand\x12*\n" +
	"\x04nics\x18\b \x03(\v2\x16.metalstack.api.v2.NicR\x04nics\x12+\n" +
	"\x02os\x18\t \x01(\v2\x1b.metalstack.api.v2.SwitchOSR\x02osB\n" +
	"\n" +
	"\b_rack_id\"P\n" +
	"\x1bSwitchServiceUpdateResponse\x121\n" +
	"\x06switch\x18\x01 \x01(\v2\x19.metalstack.api.v2.SwitchR\x06switch\":\n" +
	"\x1aSwitchServiceDeleteRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\x02id\"P\n" +
	"\x1bSwitchServiceDeleteResponse\x121\n" +
	"\x06switch\x18\x01 \x01(\v2\x19.metalstack.api.v2.SwitchR\x06switch\"w\n" +
	"\x1bSwitchServiceMigrateRequest\x12+\n" +
	"\n" +
	"old_switch\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\toldSwitch\x12+\n" +
	"\n" +
	"new_switch\x18\x02 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\tnewSwitch\"Q\n" +
	"\x1cSwitchServiceMigrateResponse\x121\n" +
	"\x06switch\x18\x01 \x01(\v2\x19.metalstack.api.v2.SwitchR\x06switch\"\x9c\x01\n" +
	"\x18SwitchServicePortRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\tB\f\xbaH\tr\a\x10\x02\x18\x80\x01h\x01R\x02id\x12%\n" +
	"\bnic_name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\anicName\x12;\n" +
	"\x06status\x18\x03 \x01(\x0e2#.metalstack.api.v2.SwitchPortStatusR\x06status\"N\n" +
	"\x19SwitchServicePortResponse\x121\n" +
	"\x06switch\x18\x01 \x01(\v2\x19.metalstack.api.v2.SwitchR\x06switch2\xbf\x05\n" +
	"\rSwitchService\x12n\n" +
	"\x03Get\x12,.metalstack.admin.v2.SwitchServiceGetRequest\x1a-.metalstack.admin.v2.SwitchServiceGetResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe0\xf3\x18\x02\x12q\n" +
	"\x04List\x12-.metalstack.admin.v2.SwitchServiceListRequest\x1a..metalstack.admin.v2.SwitchServiceListResponse\"\n" +
	"\xd2\xf3\x18\x02\x01\x02\xe0\xf3\x18\x02\x12r\n" +
	"\x06Update\x12/.metalstack.admin.v2.SwitchServiceUpdateRequest\x1a0.metalstack.admin.v2.SwitchServiceUpdateResponse\"\x05\xd2\xf3\x18\x01\x01\x12r\n" +
	"\x06Delete\x12/.metalstack.admin.v2.SwitchServiceDeleteRequest\x1a0.metalstack.admin.v2.SwitchServiceDeleteResponse\"\x05\xd2\xf3\x18\x01\x01\x12u\n" +
	"\aMigrate\x120.metalstack.admin.v2.SwitchServiceMigrateRequest\x1a1.metalstack.admin.v2.SwitchServiceMigrateResponse\"\x05\xd2\xf3\x18\x01\x01\x12l\n" +
	"\x04Port\x12-.metalstack.admin.v2.SwitchServicePortRequest\x1a..metalstack.admin.v2.SwitchServicePortResponse\"\x05\xd2\xf3\x18\x01\x01B\xcf\x01\n" +
	"\x17com.metalstack.admin.v2B\vSwitchProtoP\x01Z9github.com/metal-stack/api/go/metalstack/admin/v2;adminv2\xa2\x02\x03MAX\xaa\x02\x13Metalstack.Admin.V2\xca\x02\x13Metalstack\\Admin\\V2\xe2\x02\x1fMetalstack\\Admin\\V2\\GPBMetadata\xea\x02\x15Metalstack::Admin::V2b\x06proto3"

var (
	file_metalstack_admin_v2_switch_proto_rawDescOnce sync.Once
	file_metalstack_admin_v2_switch_proto_rawDescData []byte
)

func file_metalstack_admin_v2_switch_proto_rawDescGZIP() []byte {
	file_metalstack_admin_v2_switch_proto_rawDescOnce.Do(func() {
		file_metalstack_admin_v2_switch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_switch_proto_rawDesc), len(file_metalstack_admin_v2_switch_proto_rawDesc)))
	})
	return file_metalstack_admin_v2_switch_proto_rawDescData
}

var file_metalstack_admin_v2_switch_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_metalstack_admin_v2_switch_proto_goTypes = []any{
	(*SwitchServiceGetRequest)(nil),      // 0: metalstack.admin.v2.SwitchServiceGetRequest
	(*SwitchServiceGetResponse)(nil),     // 1: metalstack.admin.v2.SwitchServiceGetResponse
	(*SwitchServiceListRequest)(nil),     // 2: metalstack.admin.v2.SwitchServiceListRequest
	(*SwitchServiceListResponse)(nil),    // 3: metalstack.admin.v2.SwitchServiceListResponse
	(*SwitchServiceUpdateRequest)(nil),   // 4: metalstack.admin.v2.SwitchServiceUpdateRequest
	(*SwitchServiceUpdateResponse)(nil),  // 5: metalstack.admin.v2.SwitchServiceUpdateResponse
	(*SwitchServiceDeleteRequest)(nil),   // 6: metalstack.admin.v2.SwitchServiceDeleteRequest
	(*SwitchServiceDeleteResponse)(nil),  // 7: metalstack.admin.v2.SwitchServiceDeleteResponse
	(*SwitchServiceMigrateRequest)(nil),  // 8: metalstack.admin.v2.SwitchServiceMigrateRequest
	(*SwitchServiceMigrateResponse)(nil), // 9: metalstack.admin.v2.SwitchServiceMigrateResponse
	(*SwitchServicePortRequest)(nil),     // 10: metalstack.admin.v2.SwitchServicePortRequest
	(*SwitchServicePortResponse)(nil),    // 11: metalstack.admin.v2.SwitchServicePortResponse
	(*v2.Switch)(nil),                    // 12: metalstack.api.v2.Switch
	(*v2.SwitchQuery)(nil),               // 13: metalstack.api.v2.SwitchQuery
	(v2.SwitchReplaceMode)(0),            // 14: metalstack.api.v2.SwitchReplaceMode
	(*v2.Nic)(nil),                       // 15: metalstack.api.v2.Nic
	(*v2.SwitchOS)(nil),                  // 16: metalstack.api.v2.SwitchOS
	(v2.SwitchPortStatus)(0),             // 17: metalstack.api.v2.SwitchPortStatus
}
var file_metalstack_admin_v2_switch_proto_depIdxs = []int32{
	12, // 0: metalstack.admin.v2.SwitchServiceGetResponse.switch:type_name -> metalstack.api.v2.Switch
	13, // 1: metalstack.admin.v2.SwitchServiceListRequest.query:type_name -> metalstack.api.v2.SwitchQuery
	12, // 2: metalstack.admin.v2.SwitchServiceListResponse.switches:type_name -> metalstack.api.v2.Switch
	14, // 3: metalstack.admin.v2.SwitchServiceUpdateRequest.replace_mode:type_name -> metalstack.api.v2.SwitchReplaceMode
	15, // 4: metalstack.admin.v2.SwitchServiceUpdateRequest.nics:type_name -> metalstack.api.v2.Nic
	16, // 5: metalstack.admin.v2.SwitchServiceUpdateRequest.os:type_name -> metalstack.api.v2.SwitchOS
	12, // 6: metalstack.admin.v2.SwitchServiceUpdateResponse.switch:type_name -> metalstack.api.v2.Switch
	12, // 7: metalstack.admin.v2.SwitchServiceDeleteResponse.switch:type_name -> metalstack.api.v2.Switch
	12, // 8: metalstack.admin.v2.SwitchServiceMigrateResponse.switch:type_name -> metalstack.api.v2.Switch
	17, // 9: metalstack.admin.v2.SwitchServicePortRequest.status:type_name -> metalstack.api.v2.SwitchPortStatus
	12, // 10: metalstack.admin.v2.SwitchServicePortResponse.switch:type_name -> metalstack.api.v2.Switch
	0,  // 11: metalstack.admin.v2.SwitchService.Get:input_type -> metalstack.admin.v2.SwitchServiceGetRequest
	2,  // 12: metalstack.admin.v2.SwitchService.List:input_type -> metalstack.admin.v2.SwitchServiceListRequest
	4,  // 13: metalstack.admin.v2.SwitchService.Update:input_type -> metalstack.admin.v2.SwitchServiceUpdateRequest
	6,  // 14: metalstack.admin.v2.SwitchService.Delete:input_type -> metalstack.admin.v2.SwitchServiceDeleteRequest
	8,  // 15: metalstack.admin.v2.SwitchService.Migrate:input_type -> metalstack.admin.v2.SwitchServiceMigrateRequest
	10, // 16: metalstack.admin.v2.SwitchService.Port:input_type -> metalstack.admin.v2.SwitchServicePortRequest
	1,  // 17: metalstack.admin.v2.SwitchService.Get:output_type -> metalstack.admin.v2.SwitchServiceGetResponse
	3,  // 18: metalstack.admin.v2.SwitchService.List:output_type -> metalstack.admin.v2.SwitchServiceListResponse
	5,  // 19: metalstack.admin.v2.SwitchService.Update:output_type -> metalstack.admin.v2.SwitchServiceUpdateResponse
	7,  // 20: metalstack.admin.v2.SwitchService.Delete:output_type -> metalstack.admin.v2.SwitchServiceDeleteResponse
	9,  // 21: metalstack.admin.v2.SwitchService.Migrate:output_type -> metalstack.admin.v2.SwitchServiceMigrateResponse
	11, // 22: metalstack.admin.v2.SwitchService.Port:output_type -> metalstack.admin.v2.SwitchServicePortResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_metalstack_admin_v2_switch_proto_init() }
func file_metalstack_admin_v2_switch_proto_init() {
	if File_metalstack_admin_v2_switch_proto != nil {
		return
	}
	file_metalstack_admin_v2_switch_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_admin_v2_switch_proto_rawDesc), len(file_metalstack_admin_v2_switch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_admin_v2_switch_proto_goTypes,
		DependencyIndexes: file_metalstack_admin_v2_switch_proto_depIdxs,
		MessageInfos:      file_metalstack_admin_v2_switch_proto_msgTypes,
	}.Build()
	File_metalstack_admin_v2_switch_proto = out.File
	file_metalstack_admin_v2_switch_proto_goTypes = nil
	file_metalstack_admin_v2_switch_proto_depIdxs = nil
}
