// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: metalstack/infra/v2/boot.proto

package infrav2

import (
	_ "github.com/metal-stack/api/go/metalstack/api/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BootServiceDhcpRequest is called once a machine issues a dhcp request
type BootServiceDhcpRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the machine
	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceDhcpRequest) Reset() {
	*x = BootServiceDhcpRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceDhcpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpRequest) ProtoMessage() {}

func (x *BootServiceDhcpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpRequest.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{0}
}

func (x *BootServiceDhcpRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// BootServiceDhcpResponse contains the response to a dhcp request
type BootServiceDhcpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceDhcpResponse) Reset() {
	*x = BootServiceDhcpResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceDhcpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpResponse) ProtoMessage() {}

func (x *BootServiceDhcpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpResponse.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{1}
}

// BootServiceBootRequest is called to get specified parameters to boot a machine with the given mac
type BootServiceBootRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mac address of the machein
	Mac string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	// Partition where this machine is located
	PartitionId   string `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceBootRequest) Reset() {
	*x = BootServiceBootRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceBootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootRequest) ProtoMessage() {}

func (x *BootServiceBootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootRequest.ProtoReflect.Descriptor instead.
func (*BootServiceBootRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{2}
}

func (x *BootServiceBootRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *BootServiceBootRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

// BootServiceBootResponse contains additional infos which are required to boot a machine
type BootServiceBootResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kernel is the url to the linux kernel to boot
	Kernel string `protobuf:"bytes,1,opt,name=kernel,proto3" json:"kernel,omitempty"`
	// Initial ram disk is the url to the initial ram disk to boot
	InitRamDisks []string `protobuf:"bytes,2,rep,name=init_ram_disks,json=initRamDisks,proto3" json:"init_ram_disks,omitempty"`
	// CMDLine contains kernel command line parameters to boot
	Cmdline       *string `protobuf:"bytes,3,opt,name=cmdline,proto3,oneof" json:"cmdline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceBootResponse) Reset() {
	*x = BootServiceBootResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceBootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootResponse) ProtoMessage() {}

func (x *BootServiceBootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootResponse.ProtoReflect.Descriptor instead.
func (*BootServiceBootResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{3}
}

func (x *BootServiceBootResponse) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *BootServiceBootResponse) GetInitRamDisks() []string {
	if x != nil {
		return x.InitRamDisks
	}
	return nil
}

func (x *BootServiceBootResponse) GetCmdline() string {
	if x != nil && x.Cmdline != nil {
		return *x.Cmdline
	}
	return ""
}

// BootServiceRegisterRequest is called from metal-hammer to register a machine with as much hardware details as possible
type BootServiceRegisterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Hardware details of this machine
	Hardware *MachineHardware `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	// Bios details of this machine
	Bios *MachineBIOS `protobuf:"bytes,3,opt,name=bios,proto3" json:"bios,omitempty"`
	// IPMI details of this machine
	Ipmi *MachineIPMI `protobuf:"bytes,4,opt,name=ipmi,proto3" json:"ipmi,omitempty"`
	// Tags of this machine
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// MetalHammer version this machine was bootet into
	MetalHammerVersion string `protobuf:"bytes,6,opt,name=metal_hammer_version,json=metalHammerVersion,proto3" json:"metal_hammer_version,omitempty"`
	// Partition where this machine is located
	PartitionId   string `protobuf:"bytes,7,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceRegisterRequest) Reset() {
	*x = BootServiceRegisterRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterRequest) ProtoMessage() {}

func (x *BootServiceRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterRequest.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{4}
}

func (x *BootServiceRegisterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterRequest) GetHardware() *MachineHardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetBios() *MachineBIOS {
	if x != nil {
		return x.Bios
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetIpmi() *MachineIPMI {
	if x != nil {
		return x.Ipmi
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetMetalHammerVersion() string {
	if x != nil {
		return x.MetalHammerVersion
	}
	return ""
}

func (x *BootServiceRegisterRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

// BootServiceRegisterResponse response to a BootServiceRegisterResponse request
type BootServiceRegisterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Size is the calculated size from given hardware details
	Size string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	// Partition of this machine
	PartitionId   string `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceRegisterResponse) Reset() {
	*x = BootServiceRegisterResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterResponse) ProtoMessage() {}

func (x *BootServiceRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterResponse.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{5}
}

func (x *BootServiceRegisterResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

// BootServiceWaitRequest is called when a machine was registered and is waiting for allocation
type BootServiceWaitRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceWaitRequest) Reset() {
	*x = BootServiceWaitRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitRequest) ProtoMessage() {}

func (x *BootServiceWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitRequest.ProtoReflect.Descriptor instead.
func (*BootServiceWaitRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{6}
}

func (x *BootServiceWaitRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// BootServiceWaitResponse response to a wait request
type BootServiceWaitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceWaitResponse) Reset() {
	*x = BootServiceWaitResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitResponse) ProtoMessage() {}

func (x *BootServiceWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitResponse.ProtoReflect.Descriptor instead.
func (*BootServiceWaitResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{7}
}

// MachineHardware contains hardware details of this machine
type MachineHardware struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Memory in bytes
	Memory uint64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// Disks which are built into this machine
	Disks []*MachineBlockDevice `protobuf:"bytes,3,rep,name=disks,proto3" json:"disks,omitempty"`
	// Nics are network interface cards built into this machein
	Nics []*MachineNic `protobuf:"bytes,4,rep,name=nics,proto3" json:"nics,omitempty"`
	// CPUs in this machine
	Cpus []*MachineCPU `protobuf:"bytes,5,rep,name=cpus,proto3" json:"cpus,omitempty"`
	// GPUs in this machine
	Gpus          []*MachineGPU `protobuf:"bytes,6,rep,name=gpus,proto3" json:"gpus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineHardware) Reset() {
	*x = MachineHardware{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineHardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineHardware) ProtoMessage() {}

func (x *MachineHardware) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineHardware.ProtoReflect.Descriptor instead.
func (*MachineHardware) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{8}
}

func (x *MachineHardware) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *MachineHardware) GetDisks() []*MachineBlockDevice {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *MachineHardware) GetNics() []*MachineNic {
	if x != nil {
		return x.Nics
	}
	return nil
}

func (x *MachineHardware) GetCpus() []*MachineCPU {
	if x != nil {
		return x.Cpus
	}
	return nil
}

func (x *MachineHardware) GetGpus() []*MachineGPU {
	if x != nil {
		return x.Gpus
	}
	return nil
}

// MachineCPU describes a physical CPU
type MachineCPU struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Vendor of this cpu
	Vendor string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Model of this cpu
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// Cores in this cpu
	Cores uint32 `protobuf:"varint,3,opt,name=cores,proto3" json:"cores,omitempty"`
	// Threads total in this cpu
	Threads       uint32 `protobuf:"varint,4,opt,name=threads,proto3" json:"threads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineCPU) Reset() {
	*x = MachineCPU{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineCPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineCPU) ProtoMessage() {}

func (x *MachineCPU) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineCPU.ProtoReflect.Descriptor instead.
func (*MachineCPU) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{9}
}

func (x *MachineCPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *MachineCPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MachineCPU) GetCores() uint32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *MachineCPU) GetThreads() uint32 {
	if x != nil {
		return x.Threads
	}
	return 0
}

// MachineGPU describes a physical GPU
type MachineGPU struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Vendor of this gpu
	Vendor string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Model of this gpu
	Model         string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineGPU) Reset() {
	*x = MachineGPU{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineGPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineGPU) ProtoMessage() {}

func (x *MachineGPU) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineGPU.ProtoReflect.Descriptor instead.
func (*MachineGPU) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{10}
}

func (x *MachineGPU) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *MachineGPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// MachineNIC describes a network interface card
type MachineNic struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mac address of this network card
	Mac string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	// Name in the os of this network card, e.g. eth0
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Vendor of this network card
	Vendor string `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Model of this network card
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// Speed in bits/second of this network card
	Speed uint64 `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	// Neighbors connected to this network card
	Neighbors []*MachineNic `protobuf:"bytes,6,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	// Hostname FIXME clarify usage
	Hostname string `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Identifier of this network card
	Identifier    string `protobuf:"bytes,8,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineNic) Reset() {
	*x = MachineNic{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineNic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineNic) ProtoMessage() {}

func (x *MachineNic) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineNic.ProtoReflect.Descriptor instead.
func (*MachineNic) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{11}
}

func (x *MachineNic) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *MachineNic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineNic) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *MachineNic) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MachineNic) GetSpeed() uint64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *MachineNic) GetNeighbors() []*MachineNic {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *MachineNic) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MachineNic) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

// MachineBlockDevice defines a disk built into a machine
type MachineBlockDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of this device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Size in bytes of this device
	Size          uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineBlockDevice) Reset() {
	*x = MachineBlockDevice{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineBlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineBlockDevice) ProtoMessage() {}

func (x *MachineBlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineBlockDevice.ProtoReflect.Descriptor instead.
func (*MachineBlockDevice) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{12}
}

func (x *MachineBlockDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MachineBlockDevice) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// MachineBIOS describes details of the machine bios
type MachineBIOS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the bios
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Vendor of the bios
	Vendor string `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Date of the bios
	Date          string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineBIOS) Reset() {
	*x = MachineBIOS{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineBIOS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineBIOS) ProtoMessage() {}

func (x *MachineBIOS) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineBIOS.ProtoReflect.Descriptor instead.
func (*MachineBIOS) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{13}
}

func (x *MachineBIOS) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MachineBIOS) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *MachineBIOS) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// MachineIPMI describe details of the ipmi or out of band device
type MachineIPMI struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Address of this ipmi device from outside
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Mac address of the network interface of this ipmi device
	Mac string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	// User of this ipmi device
	User string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	// Password of this ipmi device
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Interface of this ipmi device
	Interface string `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
	// FRU field replaceable unit details for this machine
	Fru *MachineFRU `protobuf:"bytes,6,opt,name=fru,proto3" json:"fru,omitempty"`
	// BMCVersion of this ipmi device
	BmcVersion string `protobuf:"bytes,7,opt,name=bmc_version,json=bmcVersion,proto3" json:"bmc_version,omitempty"`
	// PowerState of this machine
	PowerState    string `protobuf:"bytes,8,opt,name=power_state,json=powerState,proto3" json:"power_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineIPMI) Reset() {
	*x = MachineIPMI{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineIPMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineIPMI) ProtoMessage() {}

func (x *MachineIPMI) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineIPMI.ProtoReflect.Descriptor instead.
func (*MachineIPMI) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{14}
}

func (x *MachineIPMI) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MachineIPMI) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *MachineIPMI) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MachineIPMI) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MachineIPMI) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *MachineIPMI) GetFru() *MachineFRU {
	if x != nil {
		return x.Fru
	}
	return nil
}

func (x *MachineIPMI) GetBmcVersion() string {
	if x != nil {
		return x.BmcVersion
	}
	return ""
}

func (x *MachineIPMI) GetPowerState() string {
	if x != nil {
		return x.PowerState
	}
	return ""
}

// MachineFRU describes details to the machine which are required in case of a necessary replacement
type MachineFRU struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ChassisPartNumber is the part number of the machine chassis
	ChassisPartNumber *string `protobuf:"bytes,1,opt,name=chassis_part_number,json=chassisPartNumber,proto3,oneof" json:"chassis_part_number,omitempty"`
	// ChassisPartSerial is the serial number of the machine chassis
	ChassisPartSerial *string `protobuf:"bytes,2,opt,name=chassis_part_serial,json=chassisPartSerial,proto3,oneof" json:"chassis_part_serial,omitempty"`
	// BoardMFG is the short description of the mainboard
	BoardMfg *string `protobuf:"bytes,3,opt,name=board_mfg,json=boardMfg,proto3,oneof" json:"board_mfg,omitempty"`
	// BoardSerial is the serial number of the mainboard
	BoardMfgSerial *string `protobuf:"bytes,4,opt,name=board_mfg_serial,json=boardMfgSerial,proto3,oneof" json:"board_mfg_serial,omitempty"`
	// BoardPartNumber is the part number of the mainboard
	BoardPartNumber *string `protobuf:"bytes,5,opt,name=board_part_number,json=boardPartNumber,proto3,oneof" json:"board_part_number,omitempty"`
	// ProductManufacturer is the manufacturer of the machine
	ProductManufacturer *string `protobuf:"bytes,6,opt,name=product_manufacturer,json=productManufacturer,proto3,oneof" json:"product_manufacturer,omitempty"`
	// ProductPartNumber is the part number of the machine
	ProductPartNumber *string `protobuf:"bytes,7,opt,name=product_part_number,json=productPartNumber,proto3,oneof" json:"product_part_number,omitempty"`
	// ProductSerial is the serial number of the machine
	ProductSerial *string `protobuf:"bytes,8,opt,name=product_serial,json=productSerial,proto3,oneof" json:"product_serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MachineFRU) Reset() {
	*x = MachineFRU{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineFRU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineFRU) ProtoMessage() {}

func (x *MachineFRU) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineFRU.ProtoReflect.Descriptor instead.
func (*MachineFRU) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{15}
}

func (x *MachineFRU) GetChassisPartNumber() string {
	if x != nil && x.ChassisPartNumber != nil {
		return *x.ChassisPartNumber
	}
	return ""
}

func (x *MachineFRU) GetChassisPartSerial() string {
	if x != nil && x.ChassisPartSerial != nil {
		return *x.ChassisPartSerial
	}
	return ""
}

func (x *MachineFRU) GetBoardMfg() string {
	if x != nil && x.BoardMfg != nil {
		return *x.BoardMfg
	}
	return ""
}

func (x *MachineFRU) GetBoardMfgSerial() string {
	if x != nil && x.BoardMfgSerial != nil {
		return *x.BoardMfgSerial
	}
	return ""
}

func (x *MachineFRU) GetBoardPartNumber() string {
	if x != nil && x.BoardPartNumber != nil {
		return *x.BoardPartNumber
	}
	return ""
}

func (x *MachineFRU) GetProductManufacturer() string {
	if x != nil && x.ProductManufacturer != nil {
		return *x.ProductManufacturer
	}
	return ""
}

func (x *MachineFRU) GetProductPartNumber() string {
	if x != nil && x.ProductPartNumber != nil {
		return *x.ProductPartNumber
	}
	return ""
}

func (x *MachineFRU) GetProductSerial() string {
	if x != nil && x.ProductSerial != nil {
		return *x.ProductSerial
	}
	return ""
}

// BootServiceReportRequest is sent from metal-hammer to the api to report the outcome of the register
type BootServiceReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the machine to boot
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Console_Password
	ConsolePassword string `protobuf:"bytes,2,opt,name=console_password,json=consolePassword,proto3" json:"console_password,omitempty"`
	// BootInfo contains all details which are the result of registration and allocation
	BootInfo *BootInfo `protobuf:"bytes,3,opt,name=boot_info,json=bootInfo,proto3" json:"boot_info,omitempty"`
	// Success is set to true of the allocation succeeded
	Success bool `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	// Message contains additional information if installation failed
	Message       string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceReportRequest) Reset() {
	*x = BootServiceReportRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportRequest) ProtoMessage() {}

func (x *BootServiceReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportRequest.ProtoReflect.Descriptor instead.
func (*BootServiceReportRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{16}
}

func (x *BootServiceReportRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceReportRequest) GetConsolePassword() string {
	if x != nil {
		return x.ConsolePassword
	}
	return ""
}

func (x *BootServiceReportRequest) GetBootInfo() *BootInfo {
	if x != nil {
		return x.BootInfo
	}
	return nil
}

func (x *BootServiceReportRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BootServiceReportRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// BootServiceReportRequest is the response to a BootServiceReportRequest
type BootServiceReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceReportResponse) Reset() {
	*x = BootServiceReportResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportResponse) ProtoMessage() {}

func (x *BootServiceReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportResponse.ProtoReflect.Descriptor instead.
func (*BootServiceReportResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{17}
}

// BootInfo contains calculated values of a allocation
type BootInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image which is going to be installed
	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	// PrimaryDisk the machine boots from
	PrimaryDisk string `protobuf:"bytes,2,opt,name=primary_disk,json=primaryDisk,proto3" json:"primary_disk,omitempty"`
	// OSPartition where the operating system is stored
	OsPartition string `protobuf:"bytes,3,opt,name=os_partition,json=osPartition,proto3" json:"os_partition,omitempty"`
	// Initrd the name of the initial ram disk
	Initrd string `protobuf:"bytes,4,opt,name=initrd,proto3" json:"initrd,omitempty"`
	// Cmdline of the kernel
	Cmdline string `protobuf:"bytes,5,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	// Kernel to boot from
	Kernel string `protobuf:"bytes,6,opt,name=kernel,proto3" json:"kernel,omitempty"`
	// BootloadID which is used to boot
	BootloaderId  string `protobuf:"bytes,8,opt,name=bootloader_id,json=bootloaderId,proto3" json:"bootloader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootInfo) Reset() {
	*x = BootInfo{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootInfo) ProtoMessage() {}

func (x *BootInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootInfo.ProtoReflect.Descriptor instead.
func (*BootInfo) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{18}
}

func (x *BootInfo) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *BootInfo) GetPrimaryDisk() string {
	if x != nil {
		return x.PrimaryDisk
	}
	return ""
}

func (x *BootInfo) GetOsPartition() string {
	if x != nil {
		return x.OsPartition
	}
	return ""
}

func (x *BootInfo) GetInitrd() string {
	if x != nil {
		return x.Initrd
	}
	return ""
}

func (x *BootInfo) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *BootInfo) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *BootInfo) GetBootloaderId() string {
	if x != nil {
		return x.BootloaderId
	}
	return ""
}

// BootServiceAbortReinstallRequest is called if the reinstallation failed and must aborted
type BootServiceAbortReinstallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// PrimaryDiskWiped is set to true if the primary disk was wiped
	PrimaryDiskWiped bool `protobuf:"varint,2,opt,name=primary_disk_wiped,json=primaryDiskWiped,proto3" json:"primary_disk_wiped,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BootServiceAbortReinstallRequest) Reset() {
	*x = BootServiceAbortReinstallRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceAbortReinstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceAbortReinstallRequest) ProtoMessage() {}

func (x *BootServiceAbortReinstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceAbortReinstallRequest.ProtoReflect.Descriptor instead.
func (*BootServiceAbortReinstallRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{19}
}

func (x *BootServiceAbortReinstallRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceAbortReinstallRequest) GetPrimaryDiskWiped() bool {
	if x != nil {
		return x.PrimaryDiskWiped
	}
	return false
}

// BootServiceAbortReinstallResponse response if a reinstall abort command was called
type BootServiceAbortReinstallResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// BootInfo contains details to the boot
	BootInfo      *BootInfo `protobuf:"bytes,1,opt,name=boot_info,json=bootInfo,proto3" json:"boot_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceAbortReinstallResponse) Reset() {
	*x = BootServiceAbortReinstallResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceAbortReinstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceAbortReinstallResponse) ProtoMessage() {}

func (x *BootServiceAbortReinstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceAbortReinstallResponse.ProtoReflect.Descriptor instead.
func (*BootServiceAbortReinstallResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{20}
}

func (x *BootServiceAbortReinstallResponse) GetBootInfo() *BootInfo {
	if x != nil {
		return x.BootInfo
	}
	return nil
}

// BootServiceSuperUserPasswordRequest this call returns the password for the machine superuser
type BootServiceSuperUserPasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceSuperUserPasswordRequest) Reset() {
	*x = BootServiceSuperUserPasswordRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceSuperUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordRequest) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{21}
}

func (x *BootServiceSuperUserPasswordRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// BootServiceSuperUserPasswordResponse the super user password is returned
type BootServiceSuperUserPasswordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeatureDisable FIXME
	FeatureDisabled bool `protobuf:"varint,1,opt,name=feature_disabled,json=featureDisabled,proto3" json:"feature_disabled,omitempty"`
	// SuperUserPassword is the password of the superuser on the ipmi device
	SuperUserPassword string `protobuf:"bytes,2,opt,name=super_user_password,json=superUserPassword,proto3" json:"super_user_password,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BootServiceSuperUserPasswordResponse) Reset() {
	*x = BootServiceSuperUserPasswordResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceSuperUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordResponse) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{22}
}

func (x *BootServiceSuperUserPasswordResponse) GetFeatureDisabled() bool {
	if x != nil {
		return x.FeatureDisabled
	}
	return false
}

func (x *BootServiceSuperUserPasswordResponse) GetSuperUserPassword() string {
	if x != nil {
		return x.SuperUserPassword
	}
	return ""
}

var File_metalstack_infra_v2_boot_proto protoreflect.FileDescriptor

const file_metalstack_infra_v2_boot_proto_rawDesc = "" +
	"\n" +
	"\x1emetalstack/infra/v2/boot.proto\x12\x13metalstack.infra.v2\x1a\x1emetalstack/api/v2/common.proto\",\n" +
	"\x16BootServiceDhcpRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"\x19\n" +
	"\x17BootServiceDhcpResponse\"M\n" +
	"\x16BootServiceBootRequest\x12\x10\n" +
	"\x03mac\x18\x01 \x01(\tR\x03mac\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\tR\vpartitionId\"\x82\x01\n" +
	"\x17BootServiceBootResponse\x12\x16\n" +
	"\x06kernel\x18\x01 \x01(\tR\x06kernel\x12$\n" +
	"\x0einit_ram_disks\x18\x02 \x03(\tR\finitRamDisks\x12\x1d\n" +
	"\acmdline\x18\x03 \x01(\tH\x00R\acmdline\x88\x01\x01B\n" +
	"\n" +
	"\b_cmdline\"\xc7\x02\n" +
	"\x1aBootServiceRegisterRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12@\n" +
	"\bhardware\x18\x02 \x01(\v2$.metalstack.infra.v2.MachineHardwareR\bhardware\x124\n" +
	"\x04bios\x18\x03 \x01(\v2 .metalstack.infra.v2.MachineBIOSR\x04bios\x124\n" +
	"\x04ipmi\x18\x04 \x01(\v2 .metalstack.infra.v2.MachineIPMIR\x04ipmi\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x120\n" +
	"\x14metal_hammer_version\x18\x06 \x01(\tR\x12metalHammerVersion\x12!\n" +
	"\fpartition_id\x18\a \x01(\tR\vpartitionId\"h\n" +
	"\x1bBootServiceRegisterResponse\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04size\x18\x02 \x01(\tR\x04size\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\",\n" +
	"\x16BootServiceWaitRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"\x19\n" +
	"\x17BootServiceWaitResponse\"\x87\x02\n" +
	"\x0fMachineHardware\x12\x16\n" +
	"\x06memory\x18\x01 \x01(\x04R\x06memory\x12=\n" +
	"\x05disks\x18\x03 \x03(\v2'.metalstack.infra.v2.MachineBlockDeviceR\x05disks\x123\n" +
	"\x04nics\x18\x04 \x03(\v2\x1f.metalstack.infra.v2.MachineNicR\x04nics\x123\n" +
	"\x04cpus\x18\x05 \x03(\v2\x1f.metalstack.infra.v2.MachineCPUR\x04cpus\x123\n" +
	"\x04gpus\x18\x06 \x03(\v2\x1f.metalstack.infra.v2.MachineGPUR\x04gpus\"j\n" +
	"\n" +
	"MachineCPU\x12\x16\n" +
	"\x06vendor\x18\x01 \x01(\tR\x06vendor\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x14\n" +
	"\x05cores\x18\x03 \x01(\rR\x05cores\x12\x18\n" +
	"\athreads\x18\x04 \x01(\rR\athreads\":\n" +
	"\n" +
	"MachineGPU\x12\x16\n" +
	"\x06vendor\x18\x01 \x01(\tR\x06vendor\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\"\xf1\x01\n" +
	"\n" +
	"MachineNic\x12\x10\n" +
	"\x03mac\x18\x01 \x01(\tR\x03mac\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06vendor\x18\x03 \x01(\tR\x06vendor\x12\x14\n" +
	"\x05model\x18\x04 \x01(\tR\x05model\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x04R\x05speed\x12=\n" +
	"\tneighbors\x18\x06 \x03(\v2\x1f.metalstack.infra.v2.MachineNicR\tneighbors\x12\x1a\n" +
	"\bhostname\x18\a \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"identifier\x18\b \x01(\tR\n" +
	"identifier\"<\n" +
	"\x12MachineBlockDevice\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x04R\x04size\"S\n" +
	"\vMachineBIOS\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x16\n" +
	"\x06vendor\x18\x02 \x01(\tR\x06vendor\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\"\xfc\x01\n" +
	"\vMachineIPMI\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\tR\x03mac\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1c\n" +
	"\tinterface\x18\x05 \x01(\tR\tinterface\x121\n" +
	"\x03fru\x18\x06 \x01(\v2\x1f.metalstack.infra.v2.MachineFRUR\x03fru\x12\x1f\n" +
	"\vbmc_version\x18\a \x01(\tR\n" +
	"bmcVersion\x12\x1f\n" +
	"\vpower_state\x18\b \x01(\tR\n" +
	"powerState\"\xbe\x04\n" +
	"\n" +
	"MachineFRU\x123\n" +
	"\x13chassis_part_number\x18\x01 \x01(\tH\x00R\x11chassisPartNumber\x88\x01\x01\x123\n" +
	"\x13chassis_part_serial\x18\x02 \x01(\tH\x01R\x11chassisPartSerial\x88\x01\x01\x12 \n" +
	"\tboard_mfg\x18\x03 \x01(\tH\x02R\bboardMfg\x88\x01\x01\x12-\n" +
	"\x10board_mfg_serial\x18\x04 \x01(\tH\x03R\x0eboardMfgSerial\x88\x01\x01\x12/\n" +
	"\x11board_part_number\x18\x05 \x01(\tH\x04R\x0fboardPartNumber\x88\x01\x01\x126\n" +
	"\x14product_manufacturer\x18\x06 \x01(\tH\x05R\x13productManufacturer\x88\x01\x01\x123\n" +
	"\x13product_part_number\x18\a \x01(\tH\x06R\x11productPartNumber\x88\x01\x01\x12*\n" +
	"\x0eproduct_serial\x18\b \x01(\tH\aR\rproductSerial\x88\x01\x01B\x16\n" +
	"\x14_chassis_part_numberB\x16\n" +
	"\x14_chassis_part_serialB\f\n" +
	"\n" +
	"_board_mfgB\x13\n" +
	"\x11_board_mfg_serialB\x14\n" +
	"\x12_board_part_numberB\x17\n" +
	"\x15_product_manufacturerB\x16\n" +
	"\x14_product_part_numberB\x11\n" +
	"\x0f_product_serial\"\xc9\x01\n" +
	"\x18BootServiceReportRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12)\n" +
	"\x10console_password\x18\x02 \x01(\tR\x0fconsolePassword\x12:\n" +
	"\tboot_info\x18\x03 \x01(\v2\x1d.metalstack.infra.v2.BootInfoR\bbootInfo\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"\x1b\n" +
	"\x19BootServiceReportResponse\"\xda\x01\n" +
	"\bBootInfo\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12!\n" +
	"\fprimary_disk\x18\x02 \x01(\tR\vprimaryDisk\x12!\n" +
	"\fos_partition\x18\x03 \x01(\tR\vosPartition\x12\x16\n" +
	"\x06initrd\x18\x04 \x01(\tR\x06initrd\x12\x18\n" +
	"\acmdline\x18\x05 \x01(\tR\acmdline\x12\x16\n" +
	"\x06kernel\x18\x06 \x01(\tR\x06kernel\x12#\n" +
	"\rbootloader_id\x18\b \x01(\tR\fbootloaderId\"d\n" +
	" BootServiceAbortReinstallRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12,\n" +
	"\x12primary_disk_wiped\x18\x02 \x01(\bR\x10primaryDiskWiped\"_\n" +
	"!BootServiceAbortReinstallResponse\x12:\n" +
	"\tboot_info\x18\x01 \x01(\v2\x1d.metalstack.infra.v2.BootInfoR\bbootInfo\"9\n" +
	"#BootServiceSuperUserPasswordRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"\x81\x01\n" +
	"$BootServiceSuperUserPasswordResponse\x12)\n" +
	"\x10feature_disabled\x18\x01 \x01(\bR\x0ffeatureDisabled\x12.\n" +
	"\x13super_user_password\x18\x02 \x01(\tR\x11superUserPassword2\xf1\x06\n" +
	"\vBootService\x12m\n" +
	"\x04Dhcp\x12+.metalstack.infra.v2.BootServiceDhcpRequest\x1a,.metalstack.infra.v2.BootServiceDhcpResponse\"\n" +
	"\xe0\xf3\x18\x02\xea\xf3\x18\x02\x01\x02\x12m\n" +
	"\x04Boot\x12+.metalstack.infra.v2.BootServiceBootRequest\x1a,.metalstack.infra.v2.BootServiceBootResponse\"\n" +
	"\xe0\xf3\x18\x02\xea\xf3\x18\x02\x01\x02\x12\x94\x01\n" +
	"\x11SuperUserPassword\x128.metalstack.infra.v2.BootServiceSuperUserPasswordRequest\x1a9.metalstack.infra.v2.BootServiceSuperUserPasswordResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02\x12y\n" +
	"\bRegister\x12/.metalstack.infra.v2.BootServiceRegisterRequest\x1a0.metalstack.infra.v2.BootServiceRegisterResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02\x12o\n" +
	"\x04Wait\x12+.metalstack.infra.v2.BootServiceWaitRequest\x1a,.metalstack.infra.v2.BootServiceWaitResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x020\x01\x12s\n" +
	"\x06Report\x12-.metalstack.infra.v2.BootServiceReportRequest\x1a..metalstack.infra.v2.BootServiceReportResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02\x12\x8b\x01\n" +
	"\x0eAbortReinstall\x125.metalstack.infra.v2.BootServiceAbortReinstallRequest\x1a6.metalstack.infra.v2.BootServiceAbortReinstallResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02B\xcd\x01\n" +
	"\x17com.metalstack.infra.v2B\tBootProtoP\x01Z9github.com/metal-stack/api/go/metalstack/infra/v2;infrav2\xa2\x02\x03MIX\xaa\x02\x13Metalstack.Infra.V2\xca\x02\x13Metalstack\\Infra\\V2\xe2\x02\x1fMetalstack\\Infra\\V2\\GPBMetadata\xea\x02\x15Metalstack::Infra::V2b\x06proto3"

var (
	file_metalstack_infra_v2_boot_proto_rawDescOnce sync.Once
	file_metalstack_infra_v2_boot_proto_rawDescData []byte
)

func file_metalstack_infra_v2_boot_proto_rawDescGZIP() []byte {
	file_metalstack_infra_v2_boot_proto_rawDescOnce.Do(func() {
		file_metalstack_infra_v2_boot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_infra_v2_boot_proto_rawDesc), len(file_metalstack_infra_v2_boot_proto_rawDesc)))
	})
	return file_metalstack_infra_v2_boot_proto_rawDescData
}

var file_metalstack_infra_v2_boot_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_metalstack_infra_v2_boot_proto_goTypes = []any{
	(*BootServiceDhcpRequest)(nil),               // 0: metalstack.infra.v2.BootServiceDhcpRequest
	(*BootServiceDhcpResponse)(nil),              // 1: metalstack.infra.v2.BootServiceDhcpResponse
	(*BootServiceBootRequest)(nil),               // 2: metalstack.infra.v2.BootServiceBootRequest
	(*BootServiceBootResponse)(nil),              // 3: metalstack.infra.v2.BootServiceBootResponse
	(*BootServiceRegisterRequest)(nil),           // 4: metalstack.infra.v2.BootServiceRegisterRequest
	(*BootServiceRegisterResponse)(nil),          // 5: metalstack.infra.v2.BootServiceRegisterResponse
	(*BootServiceWaitRequest)(nil),               // 6: metalstack.infra.v2.BootServiceWaitRequest
	(*BootServiceWaitResponse)(nil),              // 7: metalstack.infra.v2.BootServiceWaitResponse
	(*MachineHardware)(nil),                      // 8: metalstack.infra.v2.MachineHardware
	(*MachineCPU)(nil),                           // 9: metalstack.infra.v2.MachineCPU
	(*MachineGPU)(nil),                           // 10: metalstack.infra.v2.MachineGPU
	(*MachineNic)(nil),                           // 11: metalstack.infra.v2.MachineNic
	(*MachineBlockDevice)(nil),                   // 12: metalstack.infra.v2.MachineBlockDevice
	(*MachineBIOS)(nil),                          // 13: metalstack.infra.v2.MachineBIOS
	(*MachineIPMI)(nil),                          // 14: metalstack.infra.v2.MachineIPMI
	(*MachineFRU)(nil),                           // 15: metalstack.infra.v2.MachineFRU
	(*BootServiceReportRequest)(nil),             // 16: metalstack.infra.v2.BootServiceReportRequest
	(*BootServiceReportResponse)(nil),            // 17: metalstack.infra.v2.BootServiceReportResponse
	(*BootInfo)(nil),                             // 18: metalstack.infra.v2.BootInfo
	(*BootServiceAbortReinstallRequest)(nil),     // 19: metalstack.infra.v2.BootServiceAbortReinstallRequest
	(*BootServiceAbortReinstallResponse)(nil),    // 20: metalstack.infra.v2.BootServiceAbortReinstallResponse
	(*BootServiceSuperUserPasswordRequest)(nil),  // 21: metalstack.infra.v2.BootServiceSuperUserPasswordRequest
	(*BootServiceSuperUserPasswordResponse)(nil), // 22: metalstack.infra.v2.BootServiceSuperUserPasswordResponse
}
var file_metalstack_infra_v2_boot_proto_depIdxs = []int32{
	8,  // 0: metalstack.infra.v2.BootServiceRegisterRequest.hardware:type_name -> metalstack.infra.v2.MachineHardware
	13, // 1: metalstack.infra.v2.BootServiceRegisterRequest.bios:type_name -> metalstack.infra.v2.MachineBIOS
	14, // 2: metalstack.infra.v2.BootServiceRegisterRequest.ipmi:type_name -> metalstack.infra.v2.MachineIPMI
	12, // 3: metalstack.infra.v2.MachineHardware.disks:type_name -> metalstack.infra.v2.MachineBlockDevice
	11, // 4: metalstack.infra.v2.MachineHardware.nics:type_name -> metalstack.infra.v2.MachineNic
	9,  // 5: metalstack.infra.v2.MachineHardware.cpus:type_name -> metalstack.infra.v2.MachineCPU
	10, // 6: metalstack.infra.v2.MachineHardware.gpus:type_name -> metalstack.infra.v2.MachineGPU
	11, // 7: metalstack.infra.v2.MachineNic.neighbors:type_name -> metalstack.infra.v2.MachineNic
	15, // 8: metalstack.infra.v2.MachineIPMI.fru:type_name -> metalstack.infra.v2.MachineFRU
	18, // 9: metalstack.infra.v2.BootServiceReportRequest.boot_info:type_name -> metalstack.infra.v2.BootInfo
	18, // 10: metalstack.infra.v2.BootServiceAbortReinstallResponse.boot_info:type_name -> metalstack.infra.v2.BootInfo
	0,  // 11: metalstack.infra.v2.BootService.Dhcp:input_type -> metalstack.infra.v2.BootServiceDhcpRequest
	2,  // 12: metalstack.infra.v2.BootService.Boot:input_type -> metalstack.infra.v2.BootServiceBootRequest
	21, // 13: metalstack.infra.v2.BootService.SuperUserPassword:input_type -> metalstack.infra.v2.BootServiceSuperUserPasswordRequest
	4,  // 14: metalstack.infra.v2.BootService.Register:input_type -> metalstack.infra.v2.BootServiceRegisterRequest
	6,  // 15: metalstack.infra.v2.BootService.Wait:input_type -> metalstack.infra.v2.BootServiceWaitRequest
	16, // 16: metalstack.infra.v2.BootService.Report:input_type -> metalstack.infra.v2.BootServiceReportRequest
	19, // 17: metalstack.infra.v2.BootService.AbortReinstall:input_type -> metalstack.infra.v2.BootServiceAbortReinstallRequest
	1,  // 18: metalstack.infra.v2.BootService.Dhcp:output_type -> metalstack.infra.v2.BootServiceDhcpResponse
	3,  // 19: metalstack.infra.v2.BootService.Boot:output_type -> metalstack.infra.v2.BootServiceBootResponse
	22, // 20: metalstack.infra.v2.BootService.SuperUserPassword:output_type -> metalstack.infra.v2.BootServiceSuperUserPasswordResponse
	5,  // 21: metalstack.infra.v2.BootService.Register:output_type -> metalstack.infra.v2.BootServiceRegisterResponse
	7,  // 22: metalstack.infra.v2.BootService.Wait:output_type -> metalstack.infra.v2.BootServiceWaitResponse
	17, // 23: metalstack.infra.v2.BootService.Report:output_type -> metalstack.infra.v2.BootServiceReportResponse
	20, // 24: metalstack.infra.v2.BootService.AbortReinstall:output_type -> metalstack.infra.v2.BootServiceAbortReinstallResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_metalstack_infra_v2_boot_proto_init() }
func file_metalstack_infra_v2_boot_proto_init() {
	if File_metalstack_infra_v2_boot_proto != nil {
		return
	}
	file_metalstack_infra_v2_boot_proto_msgTypes[3].OneofWrappers = []any{}
	file_metalstack_infra_v2_boot_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_infra_v2_boot_proto_rawDesc), len(file_metalstack_infra_v2_boot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_infra_v2_boot_proto_goTypes,
		DependencyIndexes: file_metalstack_infra_v2_boot_proto_depIdxs,
		MessageInfos:      file_metalstack_infra_v2_boot_proto_msgTypes,
	}.Build()
	File_metalstack_infra_v2_boot_proto = out.File
	file_metalstack_infra_v2_boot_proto_goTypes = nil
	file_metalstack_infra_v2_boot_proto_depIdxs = nil
}
