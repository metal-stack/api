// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: metalstack/infra/v2/boot.proto

package infrav2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v2 "github.com/metal-stack/api/go/metalstack/api/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BootServiceDhcpRequest is called once a machine issues a dhcp request
type BootServiceDhcpRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Partition where this machine is located
	Partition     string `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceDhcpRequest) Reset() {
	*x = BootServiceDhcpRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceDhcpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpRequest) ProtoMessage() {}

func (x *BootServiceDhcpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpRequest.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{0}
}

func (x *BootServiceDhcpRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceDhcpRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

// BootServiceDhcpResponse contains the response to a dhcp request
type BootServiceDhcpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceDhcpResponse) Reset() {
	*x = BootServiceDhcpResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceDhcpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceDhcpResponse) ProtoMessage() {}

func (x *BootServiceDhcpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceDhcpResponse.ProtoReflect.Descriptor instead.
func (*BootServiceDhcpResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{1}
}

// BootServiceBootRequest is called to get specified parameters to boot a machine with the given mac
type BootServiceBootRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mac address of the machine
	Mac string `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	// Partition where this machine is located
	Partition     string `protobuf:"bytes,2,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceBootRequest) Reset() {
	*x = BootServiceBootRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceBootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootRequest) ProtoMessage() {}

func (x *BootServiceBootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootRequest.ProtoReflect.Descriptor instead.
func (*BootServiceBootRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{2}
}

func (x *BootServiceBootRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *BootServiceBootRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

// BootServiceBootResponse contains additional infos which are required to boot a machine
type BootServiceBootResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kernel is the url to the linux kernel to boot
	Kernel string `protobuf:"bytes,1,opt,name=kernel,proto3" json:"kernel,omitempty"`
	// Initial ram disk is the url to the initial ram disk to boot
	InitRamDisks []string `protobuf:"bytes,2,rep,name=init_ram_disks,json=initRamDisks,proto3" json:"init_ram_disks,omitempty"`
	// CMDLine contains kernel command line parameters to boot
	Cmdline       *string `protobuf:"bytes,3,opt,name=cmdline,proto3,oneof" json:"cmdline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceBootResponse) Reset() {
	*x = BootServiceBootResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceBootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceBootResponse) ProtoMessage() {}

func (x *BootServiceBootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceBootResponse.ProtoReflect.Descriptor instead.
func (*BootServiceBootResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{3}
}

func (x *BootServiceBootResponse) GetKernel() string {
	if x != nil {
		return x.Kernel
	}
	return ""
}

func (x *BootServiceBootResponse) GetInitRamDisks() []string {
	if x != nil {
		return x.InitRamDisks
	}
	return nil
}

func (x *BootServiceBootResponse) GetCmdline() string {
	if x != nil && x.Cmdline != nil {
		return *x.Cmdline
	}
	return ""
}

// BootServiceRegisterRequest is called from metal-hammer to register a machine with as much hardware details as possible
type BootServiceRegisterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Hardware details of this machine
	Hardware *v2.MachineHardware `protobuf:"bytes,2,opt,name=hardware,proto3" json:"hardware,omitempty"`
	// Bios details of this machine
	Bios *v2.MachineBios `protobuf:"bytes,3,opt,name=bios,proto3" json:"bios,omitempty"`
	// IPMI details of this machine
	Ipmi *v2.MachineIPMI `protobuf:"bytes,4,opt,name=ipmi,proto3" json:"ipmi,omitempty"`
	// Tags of this machine
	Tags []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	// MetalHammer version this machine was bootet into
	MetalHammerVersion string `protobuf:"bytes,6,opt,name=metal_hammer_version,json=metalHammerVersion,proto3" json:"metal_hammer_version,omitempty"`
	// Partition where this machine is located
	Partition     string `protobuf:"bytes,7,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceRegisterRequest) Reset() {
	*x = BootServiceRegisterRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterRequest) ProtoMessage() {}

func (x *BootServiceRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterRequest.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{4}
}

func (x *BootServiceRegisterRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterRequest) GetHardware() *v2.MachineHardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetBios() *v2.MachineBios {
	if x != nil {
		return x.Bios
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetIpmi() *v2.MachineIPMI {
	if x != nil {
		return x.Ipmi
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BootServiceRegisterRequest) GetMetalHammerVersion() string {
	if x != nil {
		return x.MetalHammerVersion
	}
	return ""
}

func (x *BootServiceRegisterRequest) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

// BootServiceRegisterResponse response to a BootServiceRegisterResponse request
type BootServiceRegisterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Size is the calculated size from given hardware details
	Size string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	// Partition of this machine
	Partition     string `protobuf:"bytes,3,opt,name=partition,proto3" json:"partition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceRegisterResponse) Reset() {
	*x = BootServiceRegisterResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceRegisterResponse) ProtoMessage() {}

func (x *BootServiceRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceRegisterResponse.ProtoReflect.Descriptor instead.
func (*BootServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{5}
}

func (x *BootServiceRegisterResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *BootServiceRegisterResponse) GetPartition() string {
	if x != nil {
		return x.Partition
	}
	return ""
}

// BootServiceWaitRequest is called when a machine was registered and is waiting for allocation
type BootServiceWaitRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceWaitRequest) Reset() {
	*x = BootServiceWaitRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceWaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitRequest) ProtoMessage() {}

func (x *BootServiceWaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitRequest.ProtoReflect.Descriptor instead.
func (*BootServiceWaitRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{6}
}

func (x *BootServiceWaitRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// BootServiceWaitResponse response to a wait request
type BootServiceWaitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceWaitResponse) Reset() {
	*x = BootServiceWaitResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceWaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceWaitResponse) ProtoMessage() {}

func (x *BootServiceWaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceWaitResponse.ProtoReflect.Descriptor instead.
func (*BootServiceWaitResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{7}
}

// BootServiceReportRequest is sent from metal-hammer to the api to report the outcome of the register
type BootServiceReportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the machine to boot
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Console_Password
	ConsolePassword string `protobuf:"bytes,2,opt,name=console_password,json=consolePassword,proto3" json:"console_password,omitempty"`
	// Success is set to true of the allocation succeeded
	Success bool `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	// Message contains additional information if installation failed
	Message       string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceReportRequest) Reset() {
	*x = BootServiceReportRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportRequest) ProtoMessage() {}

func (x *BootServiceReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportRequest.ProtoReflect.Descriptor instead.
func (*BootServiceReportRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{8}
}

func (x *BootServiceReportRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *BootServiceReportRequest) GetConsolePassword() string {
	if x != nil {
		return x.ConsolePassword
	}
	return ""
}

func (x *BootServiceReportRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BootServiceReportRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// BootServiceReportRequest is the response to a BootServiceReportRequest
type BootServiceReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceReportResponse) Reset() {
	*x = BootServiceReportResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceReportResponse) ProtoMessage() {}

func (x *BootServiceReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceReportResponse.ProtoReflect.Descriptor instead.
func (*BootServiceReportResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{9}
}

// BootServiceSuperUserPasswordRequest this call returns the password for the machine superuser
type BootServiceSuperUserPasswordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of this machine
	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootServiceSuperUserPasswordRequest) Reset() {
	*x = BootServiceSuperUserPasswordRequest{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceSuperUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordRequest) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{10}
}

func (x *BootServiceSuperUserPasswordRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// BootServiceSuperUserPasswordResponse the super user password is returned
type BootServiceSuperUserPasswordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// FeatureDisable FIXME
	FeatureDisabled bool `protobuf:"varint,1,opt,name=feature_disabled,json=featureDisabled,proto3" json:"feature_disabled,omitempty"`
	// SuperUserPassword is the password of the superuser on the ipmi device
	SuperUserPassword string `protobuf:"bytes,2,opt,name=super_user_password,json=superUserPassword,proto3" json:"super_user_password,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BootServiceSuperUserPasswordResponse) Reset() {
	*x = BootServiceSuperUserPasswordResponse{}
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootServiceSuperUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootServiceSuperUserPasswordResponse) ProtoMessage() {}

func (x *BootServiceSuperUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_infra_v2_boot_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootServiceSuperUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*BootServiceSuperUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_infra_v2_boot_proto_rawDescGZIP(), []int{11}
}

func (x *BootServiceSuperUserPasswordResponse) GetFeatureDisabled() bool {
	if x != nil {
		return x.FeatureDisabled
	}
	return false
}

func (x *BootServiceSuperUserPasswordResponse) GetSuperUserPassword() string {
	if x != nil {
		return x.SuperUserPassword
	}
	return ""
}

var File_metalstack_infra_v2_boot_proto protoreflect.FileDescriptor

const file_metalstack_infra_v2_boot_proto_rawDesc = "" +
	"\n" +
	"\x1emetalstack/infra/v2/boot.proto\x12\x13metalstack.infra.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1emetalstack/api/v2/common.proto\x1a\x1fmetalstack/api/v2/machine.proto\"`\n" +
	"\x16BootServiceDhcpRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12(\n" +
	"\tpartition\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\tpartition\"\x19\n" +
	"\x17BootServiceDhcpResponse\"\xc1\x01\n" +
	"\x16BootServiceBootRequest\x12}\n" +
	"\x03mac\x18\x01 \x01(\tBk\xbaHh\xba\x01e\n" +
	"\x03mac\x12\x1fmac must be a valid mac address\x1a=this.matches('^(?:[0-9A-Fa-f]{2}[:-]){5}(?:[0-9A-Fa-f]{2})$')R\x03mac\x12(\n" +
	"\tpartition\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\tpartition\"\xd2\x01\n" +
	"\x17BootServiceBootResponse\x12Z\n" +
	"\x06kernel\x18\x01 \x01(\tBB\xbaH?\xba\x01<\n" +
	"\x10valid_kernel_uri\x12\x1akernel must be a valid URI\x1a\fthis.isUri()R\x06kernel\x12$\n" +
	"\x0einit_ram_disks\x18\x02 \x03(\tR\finitRamDisks\x12)\n" +
	"\acmdline\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\acmdline\x88\x01\x01B\n" +
	"\n" +
	"\b_cmdline\"\xde\x02\n" +
	"\x1aBootServiceRegisterRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12>\n" +
	"\bhardware\x18\x02 \x01(\v2\".metalstack.api.v2.MachineHardwareR\bhardware\x122\n" +
	"\x04bios\x18\x03 \x01(\v2\x1e.metalstack.api.v2.MachineBiosR\x04bios\x122\n" +
	"\x04ipmi\x18\x04 \x01(\v2\x1e.metalstack.api.v2.MachineIPMIR\x04ipmi\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12<\n" +
	"\x14metal_hammer_version\x18\x06 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x12metalHammerVersion\x12(\n" +
	"\tpartition\x18\a \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\tpartition\"\x85\x01\n" +
	"\x1bBootServiceRegisterResponse\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12\x1e\n" +
	"\x04size\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x04size\x12(\n" +
	"\tpartition\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\tpartition\"6\n" +
	"\x16BootServiceWaitRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\"\x19\n" +
	"\x17BootServiceWaitResponse\"\xaf\x01\n" +
	"\x18BootServiceReportRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x125\n" +
	"\x10console_password\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x0fconsolePassword\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12$\n" +
	"\amessage\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x04R\amessage\"\x1b\n" +
	"\x19BootServiceReportResponse\"C\n" +
	"#BootServiceSuperUserPasswordRequest\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\"\x8d\x01\n" +
	"$BootServiceSuperUserPasswordResponse\x12)\n" +
	"\x10feature_disabled\x18\x01 \x01(\bR\x0ffeatureDisabled\x12:\n" +
	"\x13super_user_password\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x11superUserPassword2\xe3\x05\n" +
	"\vBootService\x12m\n" +
	"\x04Dhcp\x12+.metalstack.infra.v2.BootServiceDhcpRequest\x1a,.metalstack.infra.v2.BootServiceDhcpResponse\"\n" +
	"\xe0\xf3\x18\x02\xea\xf3\x18\x02\x01\x02\x12m\n" +
	"\x04Boot\x12+.metalstack.infra.v2.BootServiceBootRequest\x1a,.metalstack.infra.v2.BootServiceBootResponse\"\n" +
	"\xe0\xf3\x18\x02\xea\xf3\x18\x02\x01\x02\x12\x94\x01\n" +
	"\x11SuperUserPassword\x128.metalstack.infra.v2.BootServiceSuperUserPasswordRequest\x1a9.metalstack.infra.v2.BootServiceSuperUserPasswordResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02\x12y\n" +
	"\bRegister\x12/.metalstack.infra.v2.BootServiceRegisterRequest\x1a0.metalstack.infra.v2.BootServiceRegisterResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02\x12o\n" +
	"\x04Wait\x12+.metalstack.infra.v2.BootServiceWaitRequest\x1a,.metalstack.infra.v2.BootServiceWaitResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x020\x01\x12s\n" +
	"\x06Report\x12-.metalstack.infra.v2.BootServiceReportRequest\x1a..metalstack.infra.v2.BootServiceReportResponse\"\n" +
	"\xe0\xf3\x18\x02\xf2\xf3\x18\x02\x01\x02B\xcd\x01\n" +
	"\x17com.metalstack.infra.v2B\tBootProtoP\x01Z9github.com/metal-stack/api/go/metalstack/infra/v2;infrav2\xa2\x02\x03MIX\xaa\x02\x13Metalstack.Infra.V2\xca\x02\x13Metalstack\\Infra\\V2\xe2\x02\x1fMetalstack\\Infra\\V2\\GPBMetadata\xea\x02\x15Metalstack::Infra::V2b\x06proto3"

var (
	file_metalstack_infra_v2_boot_proto_rawDescOnce sync.Once
	file_metalstack_infra_v2_boot_proto_rawDescData []byte
)

func file_metalstack_infra_v2_boot_proto_rawDescGZIP() []byte {
	file_metalstack_infra_v2_boot_proto_rawDescOnce.Do(func() {
		file_metalstack_infra_v2_boot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_infra_v2_boot_proto_rawDesc), len(file_metalstack_infra_v2_boot_proto_rawDesc)))
	})
	return file_metalstack_infra_v2_boot_proto_rawDescData
}

var file_metalstack_infra_v2_boot_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_metalstack_infra_v2_boot_proto_goTypes = []any{
	(*BootServiceDhcpRequest)(nil),               // 0: metalstack.infra.v2.BootServiceDhcpRequest
	(*BootServiceDhcpResponse)(nil),              // 1: metalstack.infra.v2.BootServiceDhcpResponse
	(*BootServiceBootRequest)(nil),               // 2: metalstack.infra.v2.BootServiceBootRequest
	(*BootServiceBootResponse)(nil),              // 3: metalstack.infra.v2.BootServiceBootResponse
	(*BootServiceRegisterRequest)(nil),           // 4: metalstack.infra.v2.BootServiceRegisterRequest
	(*BootServiceRegisterResponse)(nil),          // 5: metalstack.infra.v2.BootServiceRegisterResponse
	(*BootServiceWaitRequest)(nil),               // 6: metalstack.infra.v2.BootServiceWaitRequest
	(*BootServiceWaitResponse)(nil),              // 7: metalstack.infra.v2.BootServiceWaitResponse
	(*BootServiceReportRequest)(nil),             // 8: metalstack.infra.v2.BootServiceReportRequest
	(*BootServiceReportResponse)(nil),            // 9: metalstack.infra.v2.BootServiceReportResponse
	(*BootServiceSuperUserPasswordRequest)(nil),  // 10: metalstack.infra.v2.BootServiceSuperUserPasswordRequest
	(*BootServiceSuperUserPasswordResponse)(nil), // 11: metalstack.infra.v2.BootServiceSuperUserPasswordResponse
	(*v2.MachineHardware)(nil),                   // 12: metalstack.api.v2.MachineHardware
	(*v2.MachineBios)(nil),                       // 13: metalstack.api.v2.MachineBios
	(*v2.MachineIPMI)(nil),                       // 14: metalstack.api.v2.MachineIPMI
}
var file_metalstack_infra_v2_boot_proto_depIdxs = []int32{
	12, // 0: metalstack.infra.v2.BootServiceRegisterRequest.hardware:type_name -> metalstack.api.v2.MachineHardware
	13, // 1: metalstack.infra.v2.BootServiceRegisterRequest.bios:type_name -> metalstack.api.v2.MachineBios
	14, // 2: metalstack.infra.v2.BootServiceRegisterRequest.ipmi:type_name -> metalstack.api.v2.MachineIPMI
	0,  // 3: metalstack.infra.v2.BootService.Dhcp:input_type -> metalstack.infra.v2.BootServiceDhcpRequest
	2,  // 4: metalstack.infra.v2.BootService.Boot:input_type -> metalstack.infra.v2.BootServiceBootRequest
	10, // 5: metalstack.infra.v2.BootService.SuperUserPassword:input_type -> metalstack.infra.v2.BootServiceSuperUserPasswordRequest
	4,  // 6: metalstack.infra.v2.BootService.Register:input_type -> metalstack.infra.v2.BootServiceRegisterRequest
	6,  // 7: metalstack.infra.v2.BootService.Wait:input_type -> metalstack.infra.v2.BootServiceWaitRequest
	8,  // 8: metalstack.infra.v2.BootService.Report:input_type -> metalstack.infra.v2.BootServiceReportRequest
	1,  // 9: metalstack.infra.v2.BootService.Dhcp:output_type -> metalstack.infra.v2.BootServiceDhcpResponse
	3,  // 10: metalstack.infra.v2.BootService.Boot:output_type -> metalstack.infra.v2.BootServiceBootResponse
	11, // 11: metalstack.infra.v2.BootService.SuperUserPassword:output_type -> metalstack.infra.v2.BootServiceSuperUserPasswordResponse
	5,  // 12: metalstack.infra.v2.BootService.Register:output_type -> metalstack.infra.v2.BootServiceRegisterResponse
	7,  // 13: metalstack.infra.v2.BootService.Wait:output_type -> metalstack.infra.v2.BootServiceWaitResponse
	9,  // 14: metalstack.infra.v2.BootService.Report:output_type -> metalstack.infra.v2.BootServiceReportResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_metalstack_infra_v2_boot_proto_init() }
func file_metalstack_infra_v2_boot_proto_init() {
	if File_metalstack_infra_v2_boot_proto != nil {
		return
	}
	file_metalstack_infra_v2_boot_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_infra_v2_boot_proto_rawDesc), len(file_metalstack_infra_v2_boot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_infra_v2_boot_proto_goTypes,
		DependencyIndexes: file_metalstack_infra_v2_boot_proto_depIdxs,
		MessageInfos:      file_metalstack_infra_v2_boot_proto_msgTypes,
	}.Build()
	File_metalstack_infra_v2_boot_proto = out.File
	file_metalstack_infra_v2_boot_proto_goTypes = nil
	file_metalstack_infra_v2_boot_proto_depIdxs = nil
}
