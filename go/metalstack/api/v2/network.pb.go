// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: metalstack/api/v2/network.proto

package apiv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NetworkServiceGetRequest
type NetworkServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the network to get
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Project of the network
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceGetRequest) Reset() {
	*x = NetworkServiceGetRequest{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceGetRequest) ProtoMessage() {}

func (x *NetworkServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceGetRequest.ProtoReflect.Descriptor instead.
func (*NetworkServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkServiceGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkServiceGetRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// NetworkServiceGetResponse
type NetworkServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network which was requested to get
	Network       *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceGetResponse) Reset() {
	*x = NetworkServiceGetResponse{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceGetResponse) ProtoMessage() {}

func (x *NetworkServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceGetResponse.ProtoReflect.Descriptor instead.
func (*NetworkServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkServiceGetResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

// NetworkServiceCreateRequest
type NetworkServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project where this network belongs to
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Name of this network
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this network
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Partition where this network will be created
	Partition *string `protobuf:"bytes,4,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Labels on this network
	Labels *Labels `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
	// Parent NetworkId points to the id of the parent network if any
	ParentNetworkId *string `protobuf:"bytes,6,opt,name=parent_network_id,json=parentNetworkId,proto3,oneof" json:"parent_network_id,omitempty"`
	// Bitlength per addressfamily
	Length []*ChildPrefixLength `protobuf:"bytes,7,rep,name=length,proto3" json:"length,omitempty"`
	// AddressFamily to create, defaults to the same as the parent
	AddressFamily *IPAddressFamily `protobuf:"varint,8,opt,name=address_family,json=addressFamily,proto3,enum=metalstack.api.v2.IPAddressFamily,oneof" json:"address_family,omitempty"`
	// Destination Prefixes in this network
	// TODO is this really required here
	DestinationPrefixes []string `protobuf:"bytes,9,rep,name=destination_prefixes,json=destinationPrefixes,proto3" json:"destination_prefixes,omitempty"`
	// Options of this network
	Options       *NetworkOptions `protobuf:"bytes,10,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceCreateRequest) Reset() {
	*x = NetworkServiceCreateRequest{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceCreateRequest) ProtoMessage() {}

func (x *NetworkServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*NetworkServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkServiceCreateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NetworkServiceCreateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworkServiceCreateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NetworkServiceCreateRequest) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *NetworkServiceCreateRequest) GetLabels() *Labels {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NetworkServiceCreateRequest) GetParentNetworkId() string {
	if x != nil && x.ParentNetworkId != nil {
		return *x.ParentNetworkId
	}
	return ""
}

func (x *NetworkServiceCreateRequest) GetLength() []*ChildPrefixLength {
	if x != nil {
		return x.Length
	}
	return nil
}

func (x *NetworkServiceCreateRequest) GetAddressFamily() IPAddressFamily {
	if x != nil && x.AddressFamily != nil {
		return *x.AddressFamily
	}
	return IPAddressFamily_IP_ADDRESS_FAMILY_UNSPECIFIED
}

func (x *NetworkServiceCreateRequest) GetDestinationPrefixes() []string {
	if x != nil {
		return x.DestinationPrefixes
	}
	return nil
}

func (x *NetworkServiceCreateRequest) GetOptions() *NetworkOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// NetworkServiceCreateResponse
type NetworkServiceCreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network is the created network
	Network       *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceCreateResponse) Reset() {
	*x = NetworkServiceCreateResponse{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceCreateResponse) ProtoMessage() {}

func (x *NetworkServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*NetworkServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkServiceCreateResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

// NetworkServiceUpdateRequest
type NetworkServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the network to get
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Project of the network
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// Name of this network
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this network
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Labels on this network
	Labels        *Labels `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"` // FIXME which fields should be updateable ?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceUpdateRequest) Reset() {
	*x = NetworkServiceUpdateRequest{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceUpdateRequest) ProtoMessage() {}

func (x *NetworkServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*NetworkServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkServiceUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkServiceUpdateRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NetworkServiceUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworkServiceUpdateRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NetworkServiceUpdateRequest) GetLabels() *Labels {
	if x != nil {
		return x.Labels
	}
	return nil
}

// NetworkServiceUpdateResponse
type NetworkServiceUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network is the updated network
	Network       *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceUpdateResponse) Reset() {
	*x = NetworkServiceUpdateResponse{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceUpdateResponse) ProtoMessage() {}

func (x *NetworkServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*NetworkServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkServiceUpdateResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

// NetworkServiceListRequest
type NetworkServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project of the networks to list
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Query which specifies which networks to return
	Query         *NetworkQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceListRequest) Reset() {
	*x = NetworkServiceListRequest{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceListRequest) ProtoMessage() {}

func (x *NetworkServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceListRequest.ProtoReflect.Descriptor instead.
func (*NetworkServiceListRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkServiceListRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *NetworkServiceListRequest) GetQuery() *NetworkQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// NetworkServiceListResponse
type NetworkServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Networks are the requested networks
	Networks      []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceListResponse) Reset() {
	*x = NetworkServiceListResponse{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceListResponse) ProtoMessage() {}

func (x *NetworkServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceListResponse.ProtoReflect.Descriptor instead.
func (*NetworkServiceListResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkServiceListResponse) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

// NetworkServiceDeleteRequest
type NetworkServiceDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the network to get
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Project of the network
	Project       string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceDeleteRequest) Reset() {
	*x = NetworkServiceDeleteRequest{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceDeleteRequest) ProtoMessage() {}

func (x *NetworkServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*NetworkServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkServiceDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkServiceDeleteRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

// NetworkServiceDeleteResponse
type NetworkServiceDeleteResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network is the deleted network
	Network       *Network `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkServiceDeleteResponse) Reset() {
	*x = NetworkServiceDeleteResponse{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkServiceDeleteResponse) ProtoMessage() {}

func (x *NetworkServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*NetworkServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{9}
}

func (x *NetworkServiceDeleteResponse) GetNetwork() *Network {
	if x != nil {
		return x.Network
	}
	return nil
}

// Network
type Network struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of this network
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Meta for this ip
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// Name of this network
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this network
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Partition where this network will be created
	Partition *string `protobuf:"bytes,5,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Project where this network belongs to
	Project *string `protobuf:"bytes,6,opt,name=project,proto3,oneof" json:"project,omitempty"`
	// Prefixes in this network
	Prefixes []string `protobuf:"bytes,8,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	// Destination Prefixes in this network
	DestinationPrefixes []string `protobuf:"bytes,9,rep,name=destination_prefixes,json=destinationPrefixes,proto3" json:"destination_prefixes,omitempty"`
	// Default Child Prefix length defines the bitlength of a child network created per addressfamily, of not specified during the allocate request
	DefaultChildPrefixLength []*ChildPrefixLength `protobuf:"bytes,10,rep,name=default_child_prefix_length,json=defaultChildPrefixLength,proto3" json:"default_child_prefix_length,omitempty"`
	// Options of this network
	Options *NetworkOptions `protobuf:"bytes,11,opt,name=options,proto3" json:"options,omitempty"`
	// Vrf ID of this network
	Vrf *uint32 `protobuf:"varint,12,opt,name=vrf,proto3,oneof" json:"vrf,omitempty"`
	// Parent NetworkId points to the id of the parent network if any
	ParentNetworkId *string `protobuf:"bytes,13,opt,name=parent_network_id,json=parentNetworkId,proto3,oneof" json:"parent_network_id,omitempty"`
	// AdditionalAnnouncableCidrs will be added to the allow list on the switch which prefixes might be announced
	AdditionalAnnouncebleCidrs []string `protobuf:"bytes,14,rep,name=additional_announceble_cidrs,json=additionalAnnouncebleCidrs,proto3" json:"additional_announceble_cidrs,omitempty"`
	// Consumption of ips and prefixes in this networks
	Consumption   *NetworkConsumption `protobuf:"bytes,15,opt,name=consumption,proto3" json:"consumption,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{10}
}

func (x *Network) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Network) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Network) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Network) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Network) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *Network) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Network) GetPrefixes() []string {
	if x != nil {
		return x.Prefixes
	}
	return nil
}

func (x *Network) GetDestinationPrefixes() []string {
	if x != nil {
		return x.DestinationPrefixes
	}
	return nil
}

func (x *Network) GetDefaultChildPrefixLength() []*ChildPrefixLength {
	if x != nil {
		return x.DefaultChildPrefixLength
	}
	return nil
}

func (x *Network) GetOptions() *NetworkOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Network) GetVrf() uint32 {
	if x != nil && x.Vrf != nil {
		return *x.Vrf
	}
	return 0
}

func (x *Network) GetParentNetworkId() string {
	if x != nil && x.ParentNetworkId != nil {
		return *x.ParentNetworkId
	}
	return ""
}

func (x *Network) GetAdditionalAnnouncebleCidrs() []string {
	if x != nil {
		return x.AdditionalAnnouncebleCidrs
	}
	return nil
}

func (x *Network) GetConsumption() *NetworkConsumption {
	if x != nil {
		return x.Consumption
	}
	return nil
}

// NetworkQuery defines which networks to query
type NetworkQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the network to query
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// Name of this network
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this network
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Partition where this network will be created
	Partition *string `protobuf:"bytes,4,opt,name=partition,proto3,oneof" json:"partition,omitempty"`
	// Project where this network belongs to
	Project *string `protobuf:"bytes,5,opt,name=project,proto3,oneof" json:"project,omitempty"`
	// Prefixes in this network
	Prefixes []string `protobuf:"bytes,6,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	// Destination Prefixes in this network
	DestinationPrefixes []string `protobuf:"bytes,7,rep,name=destination_prefixes,json=destinationPrefixes,proto3" json:"destination_prefixes,omitempty"`
	// Vrf ID of this network
	Vrf *uint32 `protobuf:"varint,8,opt,name=vrf,proto3,oneof" json:"vrf,omitempty"`
	// Parent NetworkId points to the id of the parent network if any
	ParentNetworkId *string `protobuf:"bytes,9,opt,name=parent_network_id,json=parentNetworkId,proto3,oneof" json:"parent_network_id,omitempty"`
	// Addressfamily to query
	AddressFamily *IPAddressFamily `protobuf:"varint,10,opt,name=address_family,json=addressFamily,proto3,enum=metalstack.api.v2.IPAddressFamily,oneof" json:"address_family,omitempty"`
	// Labels on this network
	Labels *Labels `protobuf:"bytes,11,opt,name=labels,proto3" json:"labels,omitempty"`
	// Options to query for
	Options       *NetworkQuery_Options `protobuf:"bytes,12,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkQuery) Reset() {
	*x = NetworkQuery{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkQuery) ProtoMessage() {}

func (x *NetworkQuery) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkQuery.ProtoReflect.Descriptor instead.
func (*NetworkQuery) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkQuery) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *NetworkQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NetworkQuery) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NetworkQuery) GetPartition() string {
	if x != nil && x.Partition != nil {
		return *x.Partition
	}
	return ""
}

func (x *NetworkQuery) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *NetworkQuery) GetPrefixes() []string {
	if x != nil {
		return x.Prefixes
	}
	return nil
}

func (x *NetworkQuery) GetDestinationPrefixes() []string {
	if x != nil {
		return x.DestinationPrefixes
	}
	return nil
}

func (x *NetworkQuery) GetVrf() uint32 {
	if x != nil && x.Vrf != nil {
		return *x.Vrf
	}
	return 0
}

func (x *NetworkQuery) GetParentNetworkId() string {
	if x != nil && x.ParentNetworkId != nil {
		return *x.ParentNetworkId
	}
	return ""
}

func (x *NetworkQuery) GetAddressFamily() IPAddressFamily {
	if x != nil && x.AddressFamily != nil {
		return *x.AddressFamily
	}
	return IPAddressFamily_IP_ADDRESS_FAMILY_UNSPECIFIED
}

func (x *NetworkQuery) GetLabels() *Labels {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NetworkQuery) GetOptions() *NetworkQuery_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

// NetworkOptions
type NetworkOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Shared indicates if this network could be shared between projects
	Shared bool `protobuf:"varint,1,opt,name=shared,proto3" json:"shared,omitempty"`
	// Nat defines that outgoing traffic is natted
	Nat bool `protobuf:"varint,2,opt,name=nat,proto3" json:"nat,omitempty"`
	// PrivateSuper indicates that this network serves a super network for project networks
	PrivateSuper bool `protobuf:"varint,3,opt,name=private_super,json=privateSuper,proto3" json:"private_super,omitempty"`
	// Underlay indicates that this network is a underlay network
	Underlay bool `protobuf:"varint,4,opt,name=underlay,proto3" json:"underlay,omitempty"`
	// VrfShared indicates if this network shares the vrf id with other networks
	VrfShared     bool `protobuf:"varint,5,opt,name=vrf_shared,json=vrfShared,proto3" json:"vrf_shared,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkOptions) Reset() {
	*x = NetworkOptions{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkOptions) ProtoMessage() {}

func (x *NetworkOptions) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkOptions.ProtoReflect.Descriptor instead.
func (*NetworkOptions) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{12}
}

func (x *NetworkOptions) GetShared() bool {
	if x != nil {
		return x.Shared
	}
	return false
}

func (x *NetworkOptions) GetNat() bool {
	if x != nil {
		return x.Nat
	}
	return false
}

func (x *NetworkOptions) GetPrivateSuper() bool {
	if x != nil {
		return x.PrivateSuper
	}
	return false
}

func (x *NetworkOptions) GetUnderlay() bool {
	if x != nil {
		return x.Underlay
	}
	return false
}

func (x *NetworkOptions) GetVrfShared() bool {
	if x != nil {
		return x.VrfShared
	}
	return false
}

// ChildPrefixLength
type ChildPrefixLength struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// AddressFamily of this network
	AddressFamily IPAddressFamily `protobuf:"varint,1,opt,name=address_family,json=addressFamily,proto3,enum=metalstack.api.v2.IPAddressFamily" json:"address_family,omitempty"`
	// Bit Length of this network in this addressfamily
	Length        uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChildPrefixLength) Reset() {
	*x = ChildPrefixLength{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChildPrefixLength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildPrefixLength) ProtoMessage() {}

func (x *ChildPrefixLength) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildPrefixLength.ProtoReflect.Descriptor instead.
func (*ChildPrefixLength) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{13}
}

func (x *ChildPrefixLength) GetAddressFamily() IPAddressFamily {
	if x != nil {
		return x.AddressFamily
	}
	return IPAddressFamily_IP_ADDRESS_FAMILY_UNSPECIFIED
}

func (x *ChildPrefixLength) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

// NetworkConsumption
type NetworkConsumption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ip and prefix consumption in the ipv4 addressfamily
	Ipv4 *NetworkUsage `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	// ip and prefix consumption in the ipv6 addressfamily
	Ipv6          *NetworkUsage `protobuf:"bytes,2,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConsumption) Reset() {
	*x = NetworkConsumption{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConsumption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConsumption) ProtoMessage() {}

func (x *NetworkConsumption) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConsumption.ProtoReflect.Descriptor instead.
func (*NetworkConsumption) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{14}
}

func (x *NetworkConsumption) GetIpv4() *NetworkUsage {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *NetworkConsumption) GetIpv6() *NetworkUsage {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

// NetworkUsage reports core metrics about available and used IPs or Prefixes in a Network.
type NetworkUsage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the total available IPs
	AvailableIps uint64 `protobuf:"varint,1,opt,name=available_ips,json=availableIps,proto3" json:"available_ips,omitempty"`
	// the total used IPs
	UsedIps uint64 `protobuf:"varint,2,opt,name=used_ips,json=usedIps,proto3" json:"used_ips,omitempty"`
	// the total available 2 bit Prefixes
	AvailablePrefixes uint64 `protobuf:"varint,3,opt,name=available_prefixes,json=availablePrefixes,proto3" json:"available_prefixes,omitempty"`
	// the total used Prefixes
	UsedPrefixes  uint64 `protobuf:"varint,4,opt,name=used_prefixes,json=usedPrefixes,proto3" json:"used_prefixes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkUsage) Reset() {
	*x = NetworkUsage{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage) ProtoMessage() {}

func (x *NetworkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkUsage.ProtoReflect.Descriptor instead.
func (*NetworkUsage) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{15}
}

func (x *NetworkUsage) GetAvailableIps() uint64 {
	if x != nil {
		return x.AvailableIps
	}
	return 0
}

func (x *NetworkUsage) GetUsedIps() uint64 {
	if x != nil {
		return x.UsedIps
	}
	return 0
}

func (x *NetworkUsage) GetAvailablePrefixes() uint64 {
	if x != nil {
		return x.AvailablePrefixes
	}
	return 0
}

func (x *NetworkUsage) GetUsedPrefixes() uint64 {
	if x != nil {
		return x.UsedPrefixes
	}
	return 0
}

// NetworkOptions to query for
type NetworkQuery_Options struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Shared indicates if this network could be shared between projects
	Shared *bool `protobuf:"varint,1,opt,name=shared,proto3,oneof" json:"shared,omitempty"`
	// Nat defines that outgoing traffic is natted
	Nat *bool `protobuf:"varint,2,opt,name=nat,proto3,oneof" json:"nat,omitempty"`
	// PrivateSuper indicates that this network serves a super network for project networks
	PrivateSuper *bool `protobuf:"varint,3,opt,name=private_super,json=privateSuper,proto3,oneof" json:"private_super,omitempty"`
	// Underlay indicates that this network is a underlay network
	Underlay *bool `protobuf:"varint,4,opt,name=underlay,proto3,oneof" json:"underlay,omitempty"`
	// VrfShared indicates if this network shares the vrf id with other networks
	VrfShared     *bool `protobuf:"varint,5,opt,name=vrf_shared,json=vrfShared,proto3,oneof" json:"vrf_shared,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkQuery_Options) Reset() {
	*x = NetworkQuery_Options{}
	mi := &file_metalstack_api_v2_network_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkQuery_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkQuery_Options) ProtoMessage() {}

func (x *NetworkQuery_Options) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_network_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkQuery_Options.ProtoReflect.Descriptor instead.
func (*NetworkQuery_Options) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_network_proto_rawDescGZIP(), []int{11, 0}
}

func (x *NetworkQuery_Options) GetShared() bool {
	if x != nil && x.Shared != nil {
		return *x.Shared
	}
	return false
}

func (x *NetworkQuery_Options) GetNat() bool {
	if x != nil && x.Nat != nil {
		return *x.Nat
	}
	return false
}

func (x *NetworkQuery_Options) GetPrivateSuper() bool {
	if x != nil && x.PrivateSuper != nil {
		return *x.PrivateSuper
	}
	return false
}

func (x *NetworkQuery_Options) GetUnderlay() bool {
	if x != nil && x.Underlay != nil {
		return *x.Underlay
	}
	return false
}

func (x *NetworkQuery_Options) GetVrfShared() bool {
	if x != nil && x.VrfShared != nil {
		return *x.VrfShared
	}
	return false
}

var File_metalstack_api_v2_network_proto protoreflect.FileDescriptor

const file_metalstack_api_v2_network_proto_rawDesc = "" +
	"\n" +
	"\x1fmetalstack/api/v2/network.proto\x12\x11metalstack.api.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1emetalstack/api/v2/common.proto\x1a\x1ametalstack/api/v2/ip.proto\"Z\n" +
	"\x18NetworkServiceGetRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x12\"\n" +
	"\aproject\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\"Q\n" +
	"\x19NetworkServiceGetResponse\x124\n" +
	"\anetwork\x18\x01 \x01(\v2\x1a.metalstack.api.v2.NetworkR\anetwork\"\x89\x06\n" +
	"\x1bNetworkServiceCreateRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12#\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\vdescription\x88\x01\x01\x12-\n" +
	"\tpartition\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x02R\tpartition\x88\x01\x01\x121\n" +
	"\x06labels\x18\x05 \x01(\v2\x19.metalstack.api.v2.LabelsR\x06labels\x12;\n" +
	"\x11parent_network_id\x18\x06 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x03R\x0fparentNetworkId\x88\x01\x01\x12<\n" +
	"\x06length\x18\a \x03(\v2$.metalstack.api.v2.ChildPrefixLengthR\x06length\x12X\n" +
	"\x0eaddress_family\x18\b \x01(\x0e2\".metalstack.api.v2.IPAddressFamilyB\b\xbaH\x05\x82\x01\x02\x10\x01H\x04R\raddressFamily\x88\x01\x01\x121\n" +
	"\x14destination_prefixes\x18\t \x03(\tR\x13destinationPrefixes\x12;\n" +
	"\aoptions\x18\n" +
	" \x01(\v2!.metalstack.api.v2.NetworkOptionsR\aoptions:w\xbaHt\x1ar\n" +
	"\x14destination_prefixes\x12(given destination_prefixes must be valid\x1a0this.destination_prefixes.all(m, m.isIpPrefix())B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_partitionB\x14\n" +
	"\x12_parent_network_idB\x11\n" +
	"\x0f_address_family\"T\n" +
	"\x1cNetworkServiceCreateResponse\x124\n" +
	"\anetwork\x18\x01 \x01(\v2\x1a.metalstack.api.v2.NetworkR\anetwork\"\x81\x02\n" +
	"\x1bNetworkServiceUpdateRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x12\"\n" +
	"\aproject\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x12#\n" +
	"\x04name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\vdescription\x88\x01\x01\x121\n" +
	"\x06labels\x18\x05 \x01(\v2\x19.metalstack.api.v2.LabelsR\x06labelsB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_description\"T\n" +
	"\x1cNetworkServiceUpdateResponse\x124\n" +
	"\anetwork\x18\x01 \x01(\v2\x1a.metalstack.api.v2.NetworkR\anetwork\"v\n" +
	"\x19NetworkServiceListRequest\x12\"\n" +
	"\aproject\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\x125\n" +
	"\x05query\x18\x02 \x01(\v2\x1f.metalstack.api.v2.NetworkQueryR\x05query\"T\n" +
	"\x1aNetworkServiceListResponse\x126\n" +
	"\bnetworks\x18\x01 \x03(\v2\x1a.metalstack.api.v2.NetworkR\bnetworks\"]\n" +
	"\x1bNetworkServiceDeleteRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x12\"\n" +
	"\aproject\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\aproject\"T\n" +
	"\x1cNetworkServiceDeleteResponse\x124\n" +
	"\anetwork\x18\x01 \x01(\v2\x1a.metalstack.api.v2.NetworkR\anetwork\"\xfb\b\n" +
	"\aNetwork\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x12+\n" +
	"\x04meta\x18\x02 \x01(\v2\x17.metalstack.api.v2.MetaR\x04meta\x12#\n" +
	"\x04name\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\vdescription\x88\x01\x01\x12-\n" +
	"\tpartition\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x02R\tpartition\x88\x01\x01\x12'\n" +
	"\aproject\x18\x06 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x03R\aproject\x88\x01\x01\x12\x1a\n" +
	"\bprefixes\x18\b \x03(\tR\bprefixes\x121\n" +
	"\x14destination_prefixes\x18\t \x03(\tR\x13destinationPrefixes\x12c\n" +
	"\x1bdefault_child_prefix_length\x18\n" +
	" \x03(\v2$.metalstack.api.v2.ChildPrefixLengthR\x18defaultChildPrefixLength\x12;\n" +
	"\aoptions\x18\v \x01(\v2!.metalstack.api.v2.NetworkOptionsR\aoptions\x12\x15\n" +
	"\x03vrf\x18\f \x01(\rH\x04R\x03vrf\x88\x01\x01\x12;\n" +
	"\x11parent_network_id\x18\r \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x05R\x0fparentNetworkId\x88\x01\x01\x12@\n" +
	"\x1cadditional_announceble_cidrs\x18\x0e \x03(\tR\x1aadditionalAnnouncebleCidrs\x12G\n" +
	"\vconsumption\x18\x0f \x01(\v2%.metalstack.api.v2.NetworkConsumptionR\vconsumption:\xd5\x02\xbaH\xd1\x02\x1aN\n" +
	"\bprefixes\x12\x1cgiven prefixes must be valid\x1a$this.prefixes.all(m, m.isIpPrefix())\x1ar\n" +
	"\x14destination_prefixes\x12(given destination_prefixes must be valid\x1a0this.destination_prefixes.all(m, m.isIpPrefix())\x1a\x8a\x01\n" +
	"\x1cadditional_announceble_cidrs\x120given additional_announceble_cidrs must be valid\x1a8this.additional_announceble_cidrs.all(m, m.isIpPrefix())B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_partitionB\n" +
	"\n" +
	"\b_projectB\x06\n" +
	"\x04_vrfB\x14\n" +
	"\x12_parent_network_id\"\xf8\b\n" +
	"\fNetworkQuery\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x02id\x88\x01\x01\x12#\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x02R\vdescription\x88\x01\x01\x12-\n" +
	"\tpartition\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x03R\tpartition\x88\x01\x01\x12'\n" +
	"\aproject\x18\x05 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01H\x04R\aproject\x88\x01\x01\x12\x1a\n" +
	"\bprefixes\x18\x06 \x03(\tR\bprefixes\x121\n" +
	"\x14destination_prefixes\x18\a \x03(\tR\x13destinationPrefixes\x12\x15\n" +
	"\x03vrf\x18\b \x01(\rH\x05R\x03vrf\x88\x01\x01\x12;\n" +
	"\x11parent_network_id\x18\t \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x06R\x0fparentNetworkId\x88\x01\x01\x12X\n" +
	"\x0eaddress_family\x18\n" +
	" \x01(\x0e2\".metalstack.api.v2.IPAddressFamilyB\b\xbaH\x05\x82\x01\x02\x10\x01H\aR\raddressFamily\x88\x01\x01\x121\n" +
	"\x06labels\x18\v \x01(\v2\x19.metalstack.api.v2.LabelsR\x06labels\x12A\n" +
	"\aoptions\x18\f \x01(\v2'.metalstack.api.v2.NetworkQuery.OptionsR\aoptions\x1a\xed\x01\n" +
	"\aOptions\x12\x1b\n" +
	"\x06shared\x18\x01 \x01(\bH\x00R\x06shared\x88\x01\x01\x12\x15\n" +
	"\x03nat\x18\x02 \x01(\bH\x01R\x03nat\x88\x01\x01\x12(\n" +
	"\rprivate_super\x18\x03 \x01(\bH\x02R\fprivateSuper\x88\x01\x01\x12\x1f\n" +
	"\bunderlay\x18\x04 \x01(\bH\x03R\bunderlay\x88\x01\x01\x12\"\n" +
	"\n" +
	"vrf_shared\x18\x05 \x01(\bH\x04R\tvrfShared\x88\x01\x01B\t\n" +
	"\a_sharedB\x06\n" +
	"\x04_natB\x10\n" +
	"\x0e_private_superB\v\n" +
	"\t_underlayB\r\n" +
	"\v_vrf_shared:\xc8\x01\xbaH\xc4\x01\x1aN\n" +
	"\bprefixes\x12\x1cgiven prefixes must be valid\x1a$this.prefixes.all(m, m.isIpPrefix())\x1ar\n" +
	"\x14destination_prefixes\x12(given destination_prefixes must be valid\x1a0this.destination_prefixes.all(m, m.isIpPrefix())B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_partitionB\n" +
	"\n" +
	"\b_projectB\x06\n" +
	"\x04_vrfB\x14\n" +
	"\x12_parent_network_idB\x11\n" +
	"\x0f_address_family\"\x9a\x01\n" +
	"\x0eNetworkOptions\x12\x16\n" +
	"\x06shared\x18\x01 \x01(\bR\x06shared\x12\x10\n" +
	"\x03nat\x18\x02 \x01(\bR\x03nat\x12#\n" +
	"\rprivate_super\x18\x03 \x01(\bR\fprivateSuper\x12\x1a\n" +
	"\bunderlay\x18\x04 \x01(\bR\bunderlay\x12\x1d\n" +
	"\n" +
	"vrf_shared\x18\x05 \x01(\bR\tvrfShared\"\x80\x01\n" +
	"\x11ChildPrefixLength\x12S\n" +
	"\x0eaddress_family\x18\x01 \x01(\x0e2\".metalstack.api.v2.IPAddressFamilyB\b\xbaH\x05\x82\x01\x02\x10\x01R\raddressFamily\x12\x16\n" +
	"\x06length\x18\x02 \x01(\rR\x06length\"~\n" +
	"\x12NetworkConsumption\x123\n" +
	"\x04ipv4\x18\x01 \x01(\v2\x1f.metalstack.api.v2.NetworkUsageR\x04ipv4\x123\n" +
	"\x04ipv6\x18\x02 \x01(\v2\x1f.metalstack.api.v2.NetworkUsageR\x04ipv6\"\xa2\x01\n" +
	"\fNetworkUsage\x12#\n" +
	"\ravailable_ips\x18\x01 \x01(\x04R\favailableIps\x12\x19\n" +
	"\bused_ips\x18\x02 \x01(\x04R\ausedIps\x12-\n" +
	"\x12available_prefixes\x18\x03 \x01(\x04R\x11availablePrefixes\x12#\n" +
	"\rused_prefixes\x18\x04 \x01(\x04R\fusedPrefixes2\xca\x04\n" +
	"\x0eNetworkService\x12m\n" +
	"\x03Get\x12+.metalstack.api.v2.NetworkServiceGetRequest\x1a,.metalstack.api.v2.NetworkServiceGetResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe0\xf3\x18\x02\x12q\n" +
	"\x06Create\x12..metalstack.api.v2.NetworkServiceCreateRequest\x1a/.metalstack.api.v2.NetworkServiceCreateResponse\"\x06\xca\xf3\x18\x02\x01\x02\x12q\n" +
	"\x06Update\x12..metalstack.api.v2.NetworkServiceUpdateRequest\x1a/.metalstack.api.v2.NetworkServiceUpdateResponse\"\x06\xca\xf3\x18\x02\x01\x02\x12p\n" +
	"\x04List\x12,.metalstack.api.v2.NetworkServiceListRequest\x1a-.metalstack.api.v2.NetworkServiceListResponse\"\v\xca\xf3\x18\x03\x01\x02\x03\xe0\xf3\x18\x02\x12q\n" +
	"\x06Delete\x12..metalstack.api.v2.NetworkServiceDeleteRequest\x1a/.metalstack.api.v2.NetworkServiceDeleteResponse\"\x06\xca\xf3\x18\x02\x01\x02B\xc2\x01\n" +
	"\x15com.metalstack.api.v2B\fNetworkProtoP\x01Z5github.com/metal-stack/api/go/metalstack/api/v2;apiv2\xa2\x02\x03MAX\xaa\x02\x11Metalstack.Api.V2\xca\x02\x11Metalstack\\Api\\V2\xe2\x02\x1dMetalstack\\Api\\V2\\GPBMetadata\xea\x02\x13Metalstack::Api::V2b\x06proto3"

var (
	file_metalstack_api_v2_network_proto_rawDescOnce sync.Once
	file_metalstack_api_v2_network_proto_rawDescData []byte
)

func file_metalstack_api_v2_network_proto_rawDescGZIP() []byte {
	file_metalstack_api_v2_network_proto_rawDescOnce.Do(func() {
		file_metalstack_api_v2_network_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_api_v2_network_proto_rawDesc), len(file_metalstack_api_v2_network_proto_rawDesc)))
	})
	return file_metalstack_api_v2_network_proto_rawDescData
}

var file_metalstack_api_v2_network_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_metalstack_api_v2_network_proto_goTypes = []any{
	(*NetworkServiceGetRequest)(nil),     // 0: metalstack.api.v2.NetworkServiceGetRequest
	(*NetworkServiceGetResponse)(nil),    // 1: metalstack.api.v2.NetworkServiceGetResponse
	(*NetworkServiceCreateRequest)(nil),  // 2: metalstack.api.v2.NetworkServiceCreateRequest
	(*NetworkServiceCreateResponse)(nil), // 3: metalstack.api.v2.NetworkServiceCreateResponse
	(*NetworkServiceUpdateRequest)(nil),  // 4: metalstack.api.v2.NetworkServiceUpdateRequest
	(*NetworkServiceUpdateResponse)(nil), // 5: metalstack.api.v2.NetworkServiceUpdateResponse
	(*NetworkServiceListRequest)(nil),    // 6: metalstack.api.v2.NetworkServiceListRequest
	(*NetworkServiceListResponse)(nil),   // 7: metalstack.api.v2.NetworkServiceListResponse
	(*NetworkServiceDeleteRequest)(nil),  // 8: metalstack.api.v2.NetworkServiceDeleteRequest
	(*NetworkServiceDeleteResponse)(nil), // 9: metalstack.api.v2.NetworkServiceDeleteResponse
	(*Network)(nil),                      // 10: metalstack.api.v2.Network
	(*NetworkQuery)(nil),                 // 11: metalstack.api.v2.NetworkQuery
	(*NetworkOptions)(nil),               // 12: metalstack.api.v2.NetworkOptions
	(*ChildPrefixLength)(nil),            // 13: metalstack.api.v2.ChildPrefixLength
	(*NetworkConsumption)(nil),           // 14: metalstack.api.v2.NetworkConsumption
	(*NetworkUsage)(nil),                 // 15: metalstack.api.v2.NetworkUsage
	(*NetworkQuery_Options)(nil),         // 16: metalstack.api.v2.NetworkQuery.Options
	(*Labels)(nil),                       // 17: metalstack.api.v2.Labels
	(IPAddressFamily)(0),                 // 18: metalstack.api.v2.IPAddressFamily
	(*Meta)(nil),                         // 19: metalstack.api.v2.Meta
}
var file_metalstack_api_v2_network_proto_depIdxs = []int32{
	10, // 0: metalstack.api.v2.NetworkServiceGetResponse.network:type_name -> metalstack.api.v2.Network
	17, // 1: metalstack.api.v2.NetworkServiceCreateRequest.labels:type_name -> metalstack.api.v2.Labels
	13, // 2: metalstack.api.v2.NetworkServiceCreateRequest.length:type_name -> metalstack.api.v2.ChildPrefixLength
	18, // 3: metalstack.api.v2.NetworkServiceCreateRequest.address_family:type_name -> metalstack.api.v2.IPAddressFamily
	12, // 4: metalstack.api.v2.NetworkServiceCreateRequest.options:type_name -> metalstack.api.v2.NetworkOptions
	10, // 5: metalstack.api.v2.NetworkServiceCreateResponse.network:type_name -> metalstack.api.v2.Network
	17, // 6: metalstack.api.v2.NetworkServiceUpdateRequest.labels:type_name -> metalstack.api.v2.Labels
	10, // 7: metalstack.api.v2.NetworkServiceUpdateResponse.network:type_name -> metalstack.api.v2.Network
	11, // 8: metalstack.api.v2.NetworkServiceListRequest.query:type_name -> metalstack.api.v2.NetworkQuery
	10, // 9: metalstack.api.v2.NetworkServiceListResponse.networks:type_name -> metalstack.api.v2.Network
	10, // 10: metalstack.api.v2.NetworkServiceDeleteResponse.network:type_name -> metalstack.api.v2.Network
	19, // 11: metalstack.api.v2.Network.meta:type_name -> metalstack.api.v2.Meta
	13, // 12: metalstack.api.v2.Network.default_child_prefix_length:type_name -> metalstack.api.v2.ChildPrefixLength
	12, // 13: metalstack.api.v2.Network.options:type_name -> metalstack.api.v2.NetworkOptions
	14, // 14: metalstack.api.v2.Network.consumption:type_name -> metalstack.api.v2.NetworkConsumption
	18, // 15: metalstack.api.v2.NetworkQuery.address_family:type_name -> metalstack.api.v2.IPAddressFamily
	17, // 16: metalstack.api.v2.NetworkQuery.labels:type_name -> metalstack.api.v2.Labels
	16, // 17: metalstack.api.v2.NetworkQuery.options:type_name -> metalstack.api.v2.NetworkQuery.Options
	18, // 18: metalstack.api.v2.ChildPrefixLength.address_family:type_name -> metalstack.api.v2.IPAddressFamily
	15, // 19: metalstack.api.v2.NetworkConsumption.ipv4:type_name -> metalstack.api.v2.NetworkUsage
	15, // 20: metalstack.api.v2.NetworkConsumption.ipv6:type_name -> metalstack.api.v2.NetworkUsage
	0,  // 21: metalstack.api.v2.NetworkService.Get:input_type -> metalstack.api.v2.NetworkServiceGetRequest
	2,  // 22: metalstack.api.v2.NetworkService.Create:input_type -> metalstack.api.v2.NetworkServiceCreateRequest
	4,  // 23: metalstack.api.v2.NetworkService.Update:input_type -> metalstack.api.v2.NetworkServiceUpdateRequest
	6,  // 24: metalstack.api.v2.NetworkService.List:input_type -> metalstack.api.v2.NetworkServiceListRequest
	8,  // 25: metalstack.api.v2.NetworkService.Delete:input_type -> metalstack.api.v2.NetworkServiceDeleteRequest
	1,  // 26: metalstack.api.v2.NetworkService.Get:output_type -> metalstack.api.v2.NetworkServiceGetResponse
	3,  // 27: metalstack.api.v2.NetworkService.Create:output_type -> metalstack.api.v2.NetworkServiceCreateResponse
	5,  // 28: metalstack.api.v2.NetworkService.Update:output_type -> metalstack.api.v2.NetworkServiceUpdateResponse
	7,  // 29: metalstack.api.v2.NetworkService.List:output_type -> metalstack.api.v2.NetworkServiceListResponse
	9,  // 30: metalstack.api.v2.NetworkService.Delete:output_type -> metalstack.api.v2.NetworkServiceDeleteResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_metalstack_api_v2_network_proto_init() }
func file_metalstack_api_v2_network_proto_init() {
	if File_metalstack_api_v2_network_proto != nil {
		return
	}
	file_metalstack_api_v2_common_proto_init()
	file_metalstack_api_v2_ip_proto_init()
	file_metalstack_api_v2_network_proto_msgTypes[2].OneofWrappers = []any{}
	file_metalstack_api_v2_network_proto_msgTypes[4].OneofWrappers = []any{}
	file_metalstack_api_v2_network_proto_msgTypes[10].OneofWrappers = []any{}
	file_metalstack_api_v2_network_proto_msgTypes[11].OneofWrappers = []any{}
	file_metalstack_api_v2_network_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_api_v2_network_proto_rawDesc), len(file_metalstack_api_v2_network_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_api_v2_network_proto_goTypes,
		DependencyIndexes: file_metalstack_api_v2_network_proto_depIdxs,
		MessageInfos:      file_metalstack_api_v2_network_proto_msgTypes,
	}.Build()
	File_metalstack_api_v2_network_proto = out.File
	file_metalstack_api_v2_network_proto_goTypes = nil
	file_metalstack_api_v2_network_proto_depIdxs = nil
}
