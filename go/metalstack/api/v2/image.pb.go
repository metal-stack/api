// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: metalstack/api/v2/image.proto

package apiv2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ImageFeature
type ImageFeature int32

const (
	// IMAGE_FEATURE_UNSPECIFIED is not specified
	ImageFeature_IMAGE_FEATURE_UNSPECIFIED ImageFeature = 0
	// IMAGE_FEATURE_MACHINE indicates this image is usable for a machine
	ImageFeature_IMAGE_FEATURE_MACHINE ImageFeature = 1
	// IMAGE_FEATURE_FIREWALL indicates this image is usable for a firewall
	ImageFeature_IMAGE_FEATURE_FIREWALL ImageFeature = 2
)

// Enum value maps for ImageFeature.
var (
	ImageFeature_name = map[int32]string{
		0: "IMAGE_FEATURE_UNSPECIFIED",
		1: "IMAGE_FEATURE_MACHINE",
		2: "IMAGE_FEATURE_FIREWALL",
	}
	ImageFeature_value = map[string]int32{
		"IMAGE_FEATURE_UNSPECIFIED": 0,
		"IMAGE_FEATURE_MACHINE":     1,
		"IMAGE_FEATURE_FIREWALL":    2,
	}
)

func (x ImageFeature) Enum() *ImageFeature {
	p := new(ImageFeature)
	*p = x
	return p
}

func (x ImageFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_metalstack_api_v2_image_proto_enumTypes[0].Descriptor()
}

func (ImageFeature) Type() protoreflect.EnumType {
	return &file_metalstack_api_v2_image_proto_enumTypes[0]
}

func (x ImageFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageFeature.Descriptor instead.
func (ImageFeature) EnumDescriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{0}
}

// Image
type ImageClassification int32

const (
	// IMAGE_CLASSIFICATION_UNSPECIFIED is not specified
	ImageClassification_IMAGE_CLASSIFICATION_UNSPECIFIED ImageClassification = 0
	// IMAGE_CLASSIFICATION_PREVIEW indicates that this image is in preview
	ImageClassification_IMAGE_CLASSIFICATION_PREVIEW ImageClassification = 1
	// IMAGE_CLASSIFICATION_SUPPORTED indicates that this image is supported
	ImageClassification_IMAGE_CLASSIFICATION_SUPPORTED ImageClassification = 2
	// IMAGE_CLASSIFICATION_DEPRECATED indicates that this image is deprecated
	ImageClassification_IMAGE_CLASSIFICATION_DEPRECATED ImageClassification = 3
)

// Enum value maps for ImageClassification.
var (
	ImageClassification_name = map[int32]string{
		0: "IMAGE_CLASSIFICATION_UNSPECIFIED",
		1: "IMAGE_CLASSIFICATION_PREVIEW",
		2: "IMAGE_CLASSIFICATION_SUPPORTED",
		3: "IMAGE_CLASSIFICATION_DEPRECATED",
	}
	ImageClassification_value = map[string]int32{
		"IMAGE_CLASSIFICATION_UNSPECIFIED": 0,
		"IMAGE_CLASSIFICATION_PREVIEW":     1,
		"IMAGE_CLASSIFICATION_SUPPORTED":   2,
		"IMAGE_CLASSIFICATION_DEPRECATED":  3,
	}
)

func (x ImageClassification) Enum() *ImageClassification {
	p := new(ImageClassification)
	*p = x
	return p
}

func (x ImageClassification) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageClassification) Descriptor() protoreflect.EnumDescriptor {
	return file_metalstack_api_v2_image_proto_enumTypes[1].Descriptor()
}

func (ImageClassification) Type() protoreflect.EnumType {
	return &file_metalstack_api_v2_image_proto_enumTypes[1]
}

func (x ImageClassification) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageClassification.Descriptor instead.
func (ImageClassification) EnumDescriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{1}
}

// ImageServiceGetRequest is the request payload for a image get request
type ImageServiceGetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to get
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceGetRequest) Reset() {
	*x = ImageServiceGetRequest{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceGetRequest) ProtoMessage() {}

func (x *ImageServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{0}
}

func (x *ImageServiceGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ImageServiceListRequest is the request payload for a image list request
type ImageServiceListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query for images
	Query         *ImageQuery `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceListRequest) Reset() {
	*x = ImageServiceListRequest{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceListRequest) ProtoMessage() {}

func (x *ImageServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceListRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceListRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{1}
}

func (x *ImageServiceListRequest) GetQuery() *ImageQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// ImageServiceLatestRequest is the request payload for a image latest request
type ImageServiceLatestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OS for which the latest image should be fetched
	// should contain os and major.minor then latest patch version of this os is returned
	Os            string `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceLatestRequest) Reset() {
	*x = ImageServiceLatestRequest{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceLatestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceLatestRequest) ProtoMessage() {}

func (x *ImageServiceLatestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceLatestRequest.ProtoReflect.Descriptor instead.
func (*ImageServiceLatestRequest) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{2}
}

func (x *ImageServiceLatestRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

// ImageServiceGetResponse is the response payload for a image get request
type ImageServiceGetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image the image
	Image         *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceGetResponse) Reset() {
	*x = ImageServiceGetResponse{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceGetResponse) ProtoMessage() {}

func (x *ImageServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{3}
}

func (x *ImageServiceGetResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// ImageServiceListResponse is the response payload for a image list request
type ImageServiceListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Images the images
	Images        []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceListResponse) Reset() {
	*x = ImageServiceListResponse{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceListResponse) ProtoMessage() {}

func (x *ImageServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceListResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceListResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{4}
}

func (x *ImageServiceListResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

// ImageServiceLatestResponse is the response payload for a image latest request
type ImageServiceLatestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image which is the latest for one os
	Image         *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageServiceLatestResponse) Reset() {
	*x = ImageServiceLatestResponse{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageServiceLatestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageServiceLatestResponse) ProtoMessage() {}

func (x *ImageServiceLatestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageServiceLatestResponse.ProtoReflect.Descriptor instead.
func (*ImageServiceLatestResponse) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{5}
}

func (x *ImageServiceLatestResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

// Image
type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of this imageLayout
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Meta for this ip
	Meta *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// URL where this image is located
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// Name of this imageLayout
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of this imageLayout
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Features of this image
	Features []ImageFeature `protobuf:"varint,6,rep,packed,name=features,proto3,enum=metalstack.api.v2.ImageFeature" json:"features,omitempty"`
	// Classification of this image
	Classification ImageClassification `protobuf:"varint,7,opt,name=classification,proto3,enum=metalstack.api.v2.ImageClassification" json:"classification,omitempty"`
	// ExpiresAt usage is not possible after this date
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{6}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Image) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Image) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Image) GetFeatures() []ImageFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Image) GetClassification() ImageClassification {
	if x != nil {
		return x.Classification
	}
	return ImageClassification_IMAGE_CLASSIFICATION_UNSPECIFIED
}

func (x *Image) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// ImageUsage reports which machines/firewalls actually use this image
type ImageUsage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Image with usage
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	// UsedBy the following machines/firewalls
	UsedBy        []string `protobuf:"bytes,2,rep,name=used_by,json=usedBy,proto3" json:"used_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageUsage) Reset() {
	*x = ImageUsage{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageUsage) ProtoMessage() {}

func (x *ImageUsage) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageUsage.ProtoReflect.Descriptor instead.
func (*ImageUsage) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{7}
}

func (x *ImageUsage) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ImageUsage) GetUsedBy() []string {
	if x != nil {
		return x.UsedBy
	}
	return nil
}

// ImageQuery is used to search images
type ImageQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the image to get
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// OS of the image
	Os *string `protobuf:"bytes,2,opt,name=os,proto3,oneof" json:"os,omitempty"`
	// Version of the Image
	Version *string `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// Name of the image to query
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Description of the image to query
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Url of the image to query
	Url *string `protobuf:"bytes,6,opt,name=url,proto3,oneof" json:"url,omitempty"`
	// Feature of the image to query
	Feature *ImageFeature `protobuf:"varint,7,opt,name=feature,proto3,enum=metalstack.api.v2.ImageFeature,oneof" json:"feature,omitempty"`
	// Classification of the image to query
	Classification *ImageClassification `protobuf:"varint,8,opt,name=classification,proto3,enum=metalstack.api.v2.ImageClassification,oneof" json:"classification,omitempty"`
	// Labels lists only images containing the given labels
	Labels        *Labels `protobuf:"bytes,9,opt,name=labels,proto3,oneof" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageQuery) Reset() {
	*x = ImageQuery{}
	mi := &file_metalstack_api_v2_image_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageQuery) ProtoMessage() {}

func (x *ImageQuery) ProtoReflect() protoreflect.Message {
	mi := &file_metalstack_api_v2_image_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageQuery.ProtoReflect.Descriptor instead.
func (*ImageQuery) Descriptor() ([]byte, []int) {
	return file_metalstack_api_v2_image_proto_rawDescGZIP(), []int{8}
}

func (x *ImageQuery) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ImageQuery) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *ImageQuery) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ImageQuery) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ImageQuery) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ImageQuery) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *ImageQuery) GetFeature() ImageFeature {
	if x != nil && x.Feature != nil {
		return *x.Feature
	}
	return ImageFeature_IMAGE_FEATURE_UNSPECIFIED
}

func (x *ImageQuery) GetClassification() ImageClassification {
	if x != nil && x.Classification != nil {
		return *x.Classification
	}
	return ImageClassification_IMAGE_CLASSIFICATION_UNSPECIFIED
}

func (x *ImageQuery) GetLabels() *Labels {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_metalstack_api_v2_image_proto protoreflect.FileDescriptor

const file_metalstack_api_v2_image_proto_rawDesc = "" +
	"\n" +
	"\x1dmetalstack/api/v2/image.proto\x12\x11metalstack.api.v2\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1emetalstack/api/v2/common.proto\"4\n" +
	"\x16ImageServiceGetRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\"N\n" +
	"\x17ImageServiceListRequest\x123\n" +
	"\x05query\x18\x01 \x01(\v2\x1d.metalstack.api.v2.ImageQueryR\x05query\"+\n" +
	"\x19ImageServiceLatestRequest\x12\x0e\n" +
	"\x02os\x18\x01 \x01(\tR\x02os\"I\n" +
	"\x17ImageServiceGetResponse\x12.\n" +
	"\x05image\x18\x01 \x01(\v2\x18.metalstack.api.v2.ImageR\x05image\"L\n" +
	"\x18ImageServiceListResponse\x120\n" +
	"\x06images\x18\x01 \x03(\v2\x18.metalstack.api.v2.ImageR\x06images\"L\n" +
	"\x1aImageServiceLatestResponse\x12.\n" +
	"\x05image\x18\x01 \x01(\v2\x18.metalstack.api.v2.ImageR\x05image\"\xa8\x04\n" +
	"\x05Image\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01R\x02id\x12+\n" +
	"\x04meta\x18\x02 \x01(\v2\x17.metalstack.api.v2.MetaR\x04meta\x12J\n" +
	"\x03url\x18\x03 \x01(\tB8\xbaH5\xba\x012\n" +
	"\tvalid_url\x12\x17url must be a valid URI\x1a\fthis.isUri()R\x03url\x12#\n" +
	"\x04name\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\vdescription\x88\x01\x01\x12\x83\x01\n" +
	"\bfeatures\x18\x06 \x03(\x0e2\x1f.metalstack.api.v2.ImageFeatureBF\xbaHC\x92\x01@\b\x01\"<\xba\x019\n" +
	"\bfeatures\x12\x15feature must be valid\x1a\x16this >= 0 && this <= 2R\bfeatures\x12X\n" +
	"\x0eclassification\x18\a \x01(\x0e2&.metalstack.api.v2.ImageClassificationB\b\xbaH\x05\x82\x01\x02\x10\x01R\x0eclassification\x129\n" +
	"\n" +
	"expires_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAtB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_description\"U\n" +
	"\n" +
	"ImageUsage\x12.\n" +
	"\x05image\x18\x01 \x01(\v2\x18.metalstack.api.v2.ImageR\x05image\x12\x17\n" +
	"\aused_by\x18\x02 \x03(\tR\x06usedBy\"\xe8\x04\n" +
	"\n" +
	"ImageQuery\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x00R\x02id\x88\x01\x01\x12\x1f\n" +
	"\x02os\x18\x02 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x01R\x02os\x88\x01\x01\x12)\n" +
	"\aversion\x18\x03 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\x80\x01H\x02R\aversion\x88\x01\x01\x12#\n" +
	"\x04name\x18\x04 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x03R\x04name\x88\x01\x01\x121\n" +
	"\vdescription\x18\x05 \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x02\x18\x80\x01H\x04R\vdescription\x88\x01\x01\x12O\n" +
	"\x03url\x18\x06 \x01(\tB8\xbaH5\xba\x012\n" +
	"\tvalid_url\x12\x17url must be a valid URI\x1a\fthis.isUri()H\x05R\x03url\x88\x01\x01\x12H\n" +
	"\afeature\x18\a \x01(\x0e2\x1f.metalstack.api.v2.ImageFeatureB\b\xbaH\x05\x82\x01\x02\x10\x01H\x06R\afeature\x88\x01\x01\x12]\n" +
	"\x0eclassification\x18\b \x01(\x0e2&.metalstack.api.v2.ImageClassificationB\b\xbaH\x05\x82\x01\x02\x10\x01H\aR\x0eclassification\x88\x01\x01\x126\n" +
	"\x06labels\x18\t \x01(\v2\x19.metalstack.api.v2.LabelsH\bR\x06labels\x88\x01\x01B\x05\n" +
	"\x03_idB\x05\n" +
	"\x03_osB\n" +
	"\n" +
	"\b_versionB\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\x06\n" +
	"\x04_urlB\n" +
	"\n" +
	"\b_featureB\x11\n" +
	"\x0f_classificationB\t\n" +
	"\a_labels*\x7f\n" +
	"\fImageFeature\x12\x1d\n" +
	"\x19IMAGE_FEATURE_UNSPECIFIED\x10\x00\x12&\n" +
	"\x15IMAGE_FEATURE_MACHINE\x10\x01\x1a\v\x82\xb2\x19\amachine\x12(\n" +
	"\x16IMAGE_FEATURE_FIREWALL\x10\x02\x1a\f\x82\xb2\x19\bfirewall*\xd2\x01\n" +
	"\x13ImageClassification\x12$\n" +
	" IMAGE_CLASSIFICATION_UNSPECIFIED\x10\x00\x12-\n" +
	"\x1cIMAGE_CLASSIFICATION_PREVIEW\x10\x01\x1a\v\x82\xb2\x19\apreview\x121\n" +
	"\x1eIMAGE_CLASSIFICATION_SUPPORTED\x10\x02\x1a\r\x82\xb2\x19\tsupported\x123\n" +
	"\x1fIMAGE_CLASSIFICATION_DEPRECATED\x10\x03\x1a\x0e\x82\xb2\x19\n" +
	"deprecated2\xd2\x02\n" +
	"\fImageService\x12f\n" +
	"\x03Get\x12).metalstack.api.v2.ImageServiceGetRequest\x1a*.metalstack.api.v2.ImageServiceGetResponse\"\b\xd8\xf3\x18\x03\xe0\xf3\x18\x02\x12i\n" +
	"\x04List\x12*.metalstack.api.v2.ImageServiceListRequest\x1a+.metalstack.api.v2.ImageServiceListResponse\"\b\xd8\xf3\x18\x03\xe0\xf3\x18\x02\x12o\n" +
	"\x06Latest\x12,.metalstack.api.v2.ImageServiceLatestRequest\x1a-.metalstack.api.v2.ImageServiceLatestResponse\"\b\xd8\xf3\x18\x03\xe0\xf3\x18\x02B\xc0\x01\n" +
	"\x15com.metalstack.api.v2B\n" +
	"ImageProtoP\x01Z5github.com/metal-stack/api/go/metalstack/api/v2;apiv2\xa2\x02\x03MAX\xaa\x02\x11Metalstack.Api.V2\xca\x02\x11Metalstack\\Api\\V2\xe2\x02\x1dMetalstack\\Api\\V2\\GPBMetadata\xea\x02\x13Metalstack::Api::V2b\x06proto3"

var (
	file_metalstack_api_v2_image_proto_rawDescOnce sync.Once
	file_metalstack_api_v2_image_proto_rawDescData []byte
)

func file_metalstack_api_v2_image_proto_rawDescGZIP() []byte {
	file_metalstack_api_v2_image_proto_rawDescOnce.Do(func() {
		file_metalstack_api_v2_image_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metalstack_api_v2_image_proto_rawDesc), len(file_metalstack_api_v2_image_proto_rawDesc)))
	})
	return file_metalstack_api_v2_image_proto_rawDescData
}

var file_metalstack_api_v2_image_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_metalstack_api_v2_image_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_metalstack_api_v2_image_proto_goTypes = []any{
	(ImageFeature)(0),                  // 0: metalstack.api.v2.ImageFeature
	(ImageClassification)(0),           // 1: metalstack.api.v2.ImageClassification
	(*ImageServiceGetRequest)(nil),     // 2: metalstack.api.v2.ImageServiceGetRequest
	(*ImageServiceListRequest)(nil),    // 3: metalstack.api.v2.ImageServiceListRequest
	(*ImageServiceLatestRequest)(nil),  // 4: metalstack.api.v2.ImageServiceLatestRequest
	(*ImageServiceGetResponse)(nil),    // 5: metalstack.api.v2.ImageServiceGetResponse
	(*ImageServiceListResponse)(nil),   // 6: metalstack.api.v2.ImageServiceListResponse
	(*ImageServiceLatestResponse)(nil), // 7: metalstack.api.v2.ImageServiceLatestResponse
	(*Image)(nil),                      // 8: metalstack.api.v2.Image
	(*ImageUsage)(nil),                 // 9: metalstack.api.v2.ImageUsage
	(*ImageQuery)(nil),                 // 10: metalstack.api.v2.ImageQuery
	(*Meta)(nil),                       // 11: metalstack.api.v2.Meta
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
	(*Labels)(nil),                     // 13: metalstack.api.v2.Labels
}
var file_metalstack_api_v2_image_proto_depIdxs = []int32{
	10, // 0: metalstack.api.v2.ImageServiceListRequest.query:type_name -> metalstack.api.v2.ImageQuery
	8,  // 1: metalstack.api.v2.ImageServiceGetResponse.image:type_name -> metalstack.api.v2.Image
	8,  // 2: metalstack.api.v2.ImageServiceListResponse.images:type_name -> metalstack.api.v2.Image
	8,  // 3: metalstack.api.v2.ImageServiceLatestResponse.image:type_name -> metalstack.api.v2.Image
	11, // 4: metalstack.api.v2.Image.meta:type_name -> metalstack.api.v2.Meta
	0,  // 5: metalstack.api.v2.Image.features:type_name -> metalstack.api.v2.ImageFeature
	1,  // 6: metalstack.api.v2.Image.classification:type_name -> metalstack.api.v2.ImageClassification
	12, // 7: metalstack.api.v2.Image.expires_at:type_name -> google.protobuf.Timestamp
	8,  // 8: metalstack.api.v2.ImageUsage.image:type_name -> metalstack.api.v2.Image
	0,  // 9: metalstack.api.v2.ImageQuery.feature:type_name -> metalstack.api.v2.ImageFeature
	1,  // 10: metalstack.api.v2.ImageQuery.classification:type_name -> metalstack.api.v2.ImageClassification
	13, // 11: metalstack.api.v2.ImageQuery.labels:type_name -> metalstack.api.v2.Labels
	2,  // 12: metalstack.api.v2.ImageService.Get:input_type -> metalstack.api.v2.ImageServiceGetRequest
	3,  // 13: metalstack.api.v2.ImageService.List:input_type -> metalstack.api.v2.ImageServiceListRequest
	4,  // 14: metalstack.api.v2.ImageService.Latest:input_type -> metalstack.api.v2.ImageServiceLatestRequest
	5,  // 15: metalstack.api.v2.ImageService.Get:output_type -> metalstack.api.v2.ImageServiceGetResponse
	6,  // 16: metalstack.api.v2.ImageService.List:output_type -> metalstack.api.v2.ImageServiceListResponse
	7,  // 17: metalstack.api.v2.ImageService.Latest:output_type -> metalstack.api.v2.ImageServiceLatestResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_metalstack_api_v2_image_proto_init() }
func file_metalstack_api_v2_image_proto_init() {
	if File_metalstack_api_v2_image_proto != nil {
		return
	}
	file_metalstack_api_v2_common_proto_init()
	file_metalstack_api_v2_image_proto_msgTypes[6].OneofWrappers = []any{}
	file_metalstack_api_v2_image_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metalstack_api_v2_image_proto_rawDesc), len(file_metalstack_api_v2_image_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metalstack_api_v2_image_proto_goTypes,
		DependencyIndexes: file_metalstack_api_v2_image_proto_depIdxs,
		EnumInfos:         file_metalstack_api_v2_image_proto_enumTypes,
		MessageInfos:      file_metalstack_api_v2_image_proto_msgTypes,
	}.Build()
	File_metalstack_api_v2_image_proto = out.File
	file_metalstack_api_v2_image_proto_goTypes = nil
	file_metalstack_api_v2_image_proto_depIdxs = nil
}
