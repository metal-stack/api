// Code generated by mockery v2.52.1. DO NOT EDIT.

package client

import (
	apiv2connect "github.com/metal-stack/api/go/metalstack/api/v2/apiv2connect"

	mock "github.com/stretchr/testify/mock"
)

// Apiv2 is an autogenerated mock type for the Apiv2 type
type Apiv2 struct {
	mock.Mock
}

// Health provides a mock function with no fields
func (_m *Apiv2) Health() apiv2connect.HealthServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Health")
	}

	var r0 apiv2connect.HealthServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.HealthServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.HealthServiceClient)
		}
	}

	return r0
}

// IP provides a mock function with no fields
func (_m *Apiv2) IP() apiv2connect.IPServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IP")
	}

	var r0 apiv2connect.IPServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.IPServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.IPServiceClient)
		}
	}

	return r0
}

// Method provides a mock function with no fields
func (_m *Apiv2) Method() apiv2connect.MethodServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Method")
	}

	var r0 apiv2connect.MethodServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.MethodServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.MethodServiceClient)
		}
	}

	return r0
}

// Partition provides a mock function with no fields
func (_m *Apiv2) Partition() apiv2connect.PartitionServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Partition")
	}

	var r0 apiv2connect.PartitionServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.PartitionServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.PartitionServiceClient)
		}
	}

	return r0
}

// Project provides a mock function with no fields
func (_m *Apiv2) Project() apiv2connect.ProjectServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Project")
	}

	var r0 apiv2connect.ProjectServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.ProjectServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.ProjectServiceClient)
		}
	}

	return r0
}

// Tenant provides a mock function with no fields
func (_m *Apiv2) Tenant() apiv2connect.TenantServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Tenant")
	}

	var r0 apiv2connect.TenantServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.TenantServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.TenantServiceClient)
		}
	}

	return r0
}

// Token provides a mock function with no fields
func (_m *Apiv2) Token() apiv2connect.TokenServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Token")
	}

	var r0 apiv2connect.TokenServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.TokenServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.TokenServiceClient)
		}
	}

	return r0
}

// User provides a mock function with no fields
func (_m *Apiv2) User() apiv2connect.UserServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for User")
	}

	var r0 apiv2connect.UserServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.UserServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.UserServiceClient)
		}
	}

	return r0
}

// Version provides a mock function with no fields
func (_m *Apiv2) Version() apiv2connect.VersionServiceClient {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Version")
	}

	var r0 apiv2connect.VersionServiceClient
	if rf, ok := ret.Get(0).(func() apiv2connect.VersionServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiv2connect.VersionServiceClient)
		}
	}

	return r0
}

// NewApiv2 creates a new instance of Apiv2. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewApiv2(t interface {
	mock.TestingT
	Cleanup(func())
}) *Apiv2 {
	mock := &Apiv2{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
