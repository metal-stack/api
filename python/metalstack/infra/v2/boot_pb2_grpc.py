# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from metalstack.infra.v2 import boot_pb2 as metalstack_dot_infra_dot_v2_dot_boot__pb2


class BootServiceStub(object):
    """BootService is used for all boot related requests, either pixiecore or metal-hammer
    Pixiecore
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Dhcp = channel.unary_unary(
                '/metalstack.infra.v2.BootService/Dhcp',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse.FromString,
                _registered_method=True)
        self.Boot = channel.unary_unary(
                '/metalstack.infra.v2.BootService/Boot',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse.FromString,
                _registered_method=True)
        self.SuperUserPassword = channel.unary_unary(
                '/metalstack.infra.v2.BootService/SuperUserPassword',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse.FromString,
                _registered_method=True)
        self.Register = channel.unary_unary(
                '/metalstack.infra.v2.BootService/Register',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse.FromString,
                _registered_method=True)
        self.Wait = channel.unary_stream(
                '/metalstack.infra.v2.BootService/Wait',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse.FromString,
                _registered_method=True)
        self.Report = channel.unary_unary(
                '/metalstack.infra.v2.BootService/Report',
                request_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest.SerializeToString,
                response_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse.FromString,
                _registered_method=True)


class BootServiceServicer(object):
    """BootService is used for all boot related requests, either pixiecore or metal-hammer
    Pixiecore
    """

    def Dhcp(self, request, context):
        """Dhcp is the first dhcp request (option 97). A ProvisioningEventPXEBooting is fired
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Boot(self, request, context):
        """Boot is called from pixie once the machine got the first dhcp response and ipxie asks for subsequent kernel and initrd
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuperUserPassword(self, request, context):
        """Metal Hammer

        SuperUserPassword metal-hammer takes the configured root password for the bmc from metal-api and configure the bmc accordingly
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Register is called from metal-hammer after hardware inventory is finished, tells metal-api all glory details about that machine
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Wait(self, request, context):
        """Wait is a hanging call that waits until the machine gets allocated by a user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Report(self, request, context):
        """FIXME after wait finished a MachineServiceGetRequest is required which must be possible with a machine_role_viewer
        This should be part of machine.proto

        Report tells metal-api installation was either successful or failed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BootServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Dhcp': grpc.unary_unary_rpc_method_handler(
                    servicer.Dhcp,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse.SerializeToString,
            ),
            'Boot': grpc.unary_unary_rpc_method_handler(
                    servicer.Boot,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse.SerializeToString,
            ),
            'SuperUserPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.SuperUserPassword,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse.SerializeToString,
            ),
            'Wait': grpc.unary_stream_rpc_method_handler(
                    servicer.Wait,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse.SerializeToString,
            ),
            'Report': grpc.unary_unary_rpc_method_handler(
                    servicer.Report,
                    request_deserializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest.FromString,
                    response_serializer=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'metalstack.infra.v2.BootService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('metalstack.infra.v2.BootService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BootService(object):
    """BootService is used for all boot related requests, either pixiecore or metal-hammer
    Pixiecore
    """

    @staticmethod
    def Dhcp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.infra.v2.BootService/Dhcp',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Boot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.infra.v2.BootService/Boot',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SuperUserPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.infra.v2.BootService/SuperUserPassword',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.infra.v2.BootService/Register',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Wait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/metalstack.infra.v2.BootService/Wait',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Report(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/metalstack.infra.v2.BootService/Report',
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest.SerializeToString,
            metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
