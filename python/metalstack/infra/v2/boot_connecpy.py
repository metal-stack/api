# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/v2/protoc-gen-connecpy.  DO NOT EDIT!
# source: metalstack/infra/v2/boot.proto

from collections.abc import AsyncIterator, Iterable, Iterator, Mapping
from typing import Protocol

from connecpy.client import ConnecpyClient, ConnecpyClientSync
from connecpy.code import Code
from connecpy.exceptions import ConnecpyException
from connecpy.interceptor import Interceptor, InterceptorSync
from connecpy.method import IdempotencyLevel, MethodInfo
from connecpy.request import Headers, RequestContext
from connecpy.server import ConnecpyASGIApplication, ConnecpyWSGIApplication, Endpoint, EndpointSync
import metalstack.infra.v2.boot_pb2 as metalstack_dot_infra_dot_v2_dot_boot__pb2


class BootService(Protocol):
    async def dhcp(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def boot(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def super_user_password(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def register(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def wait(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest, ctx: RequestContext) -> AsyncIterator[metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse]:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def report(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class BootServiceASGIApplication(ConnecpyASGIApplication):
    def __init__(self, service: BootService, *, interceptors: Iterable[Interceptor]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.infra.v2.BootService/Dhcp": Endpoint.unary(
                    method=MethodInfo(
                        name="Dhcp",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.dhcp,
                ),
                "/metalstack.infra.v2.BootService/Boot": Endpoint.unary(
                    method=MethodInfo(
                        name="Boot",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.boot,
                ),
                "/metalstack.infra.v2.BootService/SuperUserPassword": Endpoint.unary(
                    method=MethodInfo(
                        name="SuperUserPassword",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.super_user_password,
                ),
                "/metalstack.infra.v2.BootService/Register": Endpoint.unary(
                    method=MethodInfo(
                        name="Register",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register,
                ),
                "/metalstack.infra.v2.BootService/Wait": Endpoint.server_stream(
                    method=MethodInfo(
                        name="Wait",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.wait,
                ),
                "/metalstack.infra.v2.BootService/Report": Endpoint.unary(
                    method=MethodInfo(
                        name="Report",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.report,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.infra.v2.BootService"


class BootServiceClient(ConnecpyClient):
    async def dhcp(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Dhcp",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def boot(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Boot",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def super_user_password(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SuperUserPassword",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def register(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Register",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def wait(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> AsyncIterator[metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse]:
        return self.execute_server_stream(
            request=request,
            method=MethodInfo(
                name="Wait",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    async def report(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse:
        return await self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Report",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )


class BootServiceSync(Protocol):
    def dhcp(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def boot(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def super_user_password(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def register(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def wait(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest, ctx: RequestContext) -> Iterator[metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse]:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")
    def report(self, request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest, ctx: RequestContext) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class BootServiceWSGIApplication(ConnecpyWSGIApplication):
    def __init__(self, service: BootServiceSync, interceptors: Iterable[InterceptorSync]=(), read_max_bytes: int | None = None):
        super().__init__(
            endpoints={
                "/metalstack.infra.v2.BootService/Dhcp": EndpointSync.unary(
                    method=MethodInfo(
                        name="Dhcp",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.dhcp,
                ),
                "/metalstack.infra.v2.BootService/Boot": EndpointSync.unary(
                    method=MethodInfo(
                        name="Boot",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.boot,
                ),
                "/metalstack.infra.v2.BootService/SuperUserPassword": EndpointSync.unary(
                    method=MethodInfo(
                        name="SuperUserPassword",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.super_user_password,
                ),
                "/metalstack.infra.v2.BootService/Register": EndpointSync.unary(
                    method=MethodInfo(
                        name="Register",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.register,
                ),
                "/metalstack.infra.v2.BootService/Wait": EndpointSync.server_stream(
                    method=MethodInfo(
                        name="Wait",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.wait,
                ),
                "/metalstack.infra.v2.BootService/Report": EndpointSync.unary(
                    method=MethodInfo(
                        name="Report",
                        service_name="metalstack.infra.v2.BootService",
                        input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
                        output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse,
                        idempotency_level=IdempotencyLevel.UNKNOWN,
                    ),
                    function=service.report,
                ),
            },
            interceptors=interceptors,
            read_max_bytes=read_max_bytes,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/metalstack.infra.v2.BootService"


class BootServiceClientSync(ConnecpyClientSync):
    def dhcp(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Dhcp",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceDhcpResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def boot(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Boot",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceBootResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def super_user_password(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="SuperUserPassword",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceSuperUserPasswordResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def register(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Register",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceRegisterResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def wait(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> Iterator[metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse]:
        return self.execute_server_stream(
            request=request,
            method=MethodInfo(
                name="Wait",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceWaitResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )

    def report(
        self,
        request: metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse:
        return self.execute_unary(
            request=request,
            method=MethodInfo(
                name="Report",
                service_name="metalstack.infra.v2.BootService",
                input=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportRequest,
                output=metalstack_dot_infra_dot_v2_dot_boot__pb2.BootServiceReportResponse,
                idempotency_level=IdempotencyLevel.UNKNOWN,
            ),
            headers=headers,
            timeout_ms=timeout_ms,
        )
