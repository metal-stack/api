# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/protoc-gen-connecpy.  DO NOT EDIT!
# source: metalstack/api/v2/image.proto

from typing import Optional, Protocol, Union

import httpx

from connecpy.async_client import AsyncConnecpyClient
from connecpy.base import Endpoint
from connecpy.server import ConnecpyServer
from connecpy.client import ConnecpyClient
from connecpy.context import ClientContext, ServiceContext

import metalstack.api.v2.image_pb2 as _pb2


class ImageService(Protocol):
    async def Get(self, req: _pb2.ImageServiceGetRequest, ctx: ServiceContext) -> _pb2.ImageServiceGetResponse: ...
    async def List(self, req: _pb2.ImageServiceListRequest, ctx: ServiceContext) -> _pb2.ImageServiceListResponse: ...
    async def Latest(self, req: _pb2.ImageServiceLatestRequest, ctx: ServiceContext) -> _pb2.ImageServiceLatestResponse: ...


class ImageServiceServer(ConnecpyServer):
    def __init__(self, *, service: ImageService, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/metalstack.api.v2.ImageService"
        self._endpoints = {
            "Get": Endpoint[_pb2.ImageServiceGetRequest, _pb2.ImageServiceGetResponse](
                service_name="ImageService",
                name="Get",
                function=getattr(service, "Get"),
                input=_pb2.ImageServiceGetRequest,
                output=_pb2.ImageServiceGetResponse,
                allowed_methods=("POST",),
            ),
            "List": Endpoint[_pb2.ImageServiceListRequest, _pb2.ImageServiceListResponse](
                service_name="ImageService",
                name="List",
                function=getattr(service, "List"),
                input=_pb2.ImageServiceListRequest,
                output=_pb2.ImageServiceListResponse,
                allowed_methods=("POST",),
            ),
            "Latest": Endpoint[_pb2.ImageServiceLatestRequest, _pb2.ImageServiceLatestResponse](
                service_name="ImageService",
                name="Latest",
                function=getattr(service, "Latest"),
                input=_pb2.ImageServiceLatestRequest,
                output=_pb2.ImageServiceLatestResponse,
                allowed_methods=("POST",),
            ),
        }

    def serviceName(self):
        return "metalstack.api.v2.ImageService"


class ImageServiceSync(Protocol):
    def Get(self, req: _pb2.ImageServiceGetRequest, ctx: ServiceContext) -> _pb2.ImageServiceGetResponse: ...
    def List(self, req: _pb2.ImageServiceListRequest, ctx: ServiceContext) -> _pb2.ImageServiceListResponse: ...
    def Latest(self, req: _pb2.ImageServiceLatestRequest, ctx: ServiceContext) -> _pb2.ImageServiceLatestResponse: ...


class ImageServiceServerSync(ConnecpyServer):
    def __init__(self, *, service: ImageServiceSync, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/metalstack.api.v2.ImageService"
        self._endpoints = {
            "Get": Endpoint[_pb2.ImageServiceGetRequest, _pb2.ImageServiceGetResponse](
                service_name="ImageService",
                name="Get",
                function=getattr(service, "Get"),
                input=_pb2.ImageServiceGetRequest,
                output=_pb2.ImageServiceGetResponse,
                allowed_methods=("POST",),
            ),
            "List": Endpoint[_pb2.ImageServiceListRequest, _pb2.ImageServiceListResponse](
                service_name="ImageService",
                name="List",
                function=getattr(service, "List"),
                input=_pb2.ImageServiceListRequest,
                output=_pb2.ImageServiceListResponse,
                allowed_methods=("POST",),
            ),
            "Latest": Endpoint[_pb2.ImageServiceLatestRequest, _pb2.ImageServiceLatestResponse](
                service_name="ImageService",
                name="Latest",
                function=getattr(service, "Latest"),
                input=_pb2.ImageServiceLatestRequest,
                output=_pb2.ImageServiceLatestResponse,
                allowed_methods=("POST",),
            ),
        }

    def serviceName(self):
        return "metalstack.api.v2.ImageService"


class ImageServiceClient(ConnecpyClient):
    def Get(
        self,
        *,
        request: _pb2.ImageServiceGetRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        **kwargs,
    ) -> _pb2.ImageServiceGetResponse:
        method = "POST"
        return self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/Get",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceGetResponse,
            method=method,
            **kwargs,
        )

    def List(
        self,
        *,
        request: _pb2.ImageServiceListRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        **kwargs,
    ) -> _pb2.ImageServiceListResponse:
        method = "POST"
        return self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/List",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceListResponse,
            method=method,
            **kwargs,
        )

    def Latest(
        self,
        *,
        request: _pb2.ImageServiceLatestRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        **kwargs,
    ) -> _pb2.ImageServiceLatestResponse:
        method = "POST"
        return self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/Latest",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceLatestResponse,
            method=method,
            **kwargs,
        )


class AsyncImageServiceClient(AsyncConnecpyClient):
    async def Get(
        self,
        *,
        request: _pb2.ImageServiceGetRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
        **kwargs,
    ) -> _pb2.ImageServiceGetResponse:
        method = "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/Get",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceGetResponse,
            method=method,
            session=session,
            **kwargs,
        )

    async def List(
        self,
        *,
        request: _pb2.ImageServiceListRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
        **kwargs,
    ) -> _pb2.ImageServiceListResponse:
        method = "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/List",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceListResponse,
            method=method,
            session=session,
            **kwargs,
        )

    async def Latest(
        self,
        *,
        request: _pb2.ImageServiceLatestRequest,
        ctx: Optional[ClientContext] = None,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
        **kwargs,
    ) -> _pb2.ImageServiceLatestResponse:
        method = "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/metalstack.api.v2.ImageService/Latest",
            ctx=ctx,
            request=request,
            response_class=_pb2.ImageServiceLatestResponse,
            method=method,
            session=session,
            **kwargs,
        )
