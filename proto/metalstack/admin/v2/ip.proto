syntax = "proto3";

package metalstack.admin.v2;

import "metalstack/api/v2/common.proto";
import "metalstack/api/v2/ip.proto";

// IPService serves ip address related functions
service IPService {
  // List all ips
  rpc List(IPServiceListRequest) returns (IPServiceListResponse) {
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_EDITOR;
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_VIEWER;
    option (metalstack.api.v2.auditing) = AUDITING_EXCLUDED;
  }
  // Show issues with ips
  rpc Issues(IPServiceIssuesRequest) returns (IPServiceIssuesResponse) {
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_EDITOR;
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_VIEWER;
    option (metalstack.api.v2.auditing) = AUDITING_EXCLUDED;
  }
}

// IPServiceListRequest
message IPServiceListRequest {
  // Query to search for one or more ips
  metalstack.api.v2.IPQuery query = 1;
}

// IPServiceListResponse
message IPServiceListResponse {
  // IPs are the list of ips
  repeated metalstack.api.v2.IP ips = 1;
}

// IPServiceIssuesRequest
message IPServiceIssuesRequest {
  // No arguments actually
}

// IPServiceIssuesResponse
message IPServiceIssuesResponse {
  // Issues with ips
  repeated IPIssue issues = 1;
}

// IPIssue
message IPIssue {
  // Description of the issue with this ip
  string description = 1;
  // IP is the ip with the issue
  metalstack.api.v2.IP ip = 2;
}
