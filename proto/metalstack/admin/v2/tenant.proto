syntax = "proto3";

package metalstack.admin.v2;

import "buf/validate/validate.proto";
import "metalstack/api/v2/common.proto";
import "metalstack/api/v2/tenant.proto";

// TenantService serves tenant related functions
service TenantService {
  // Create a tenant
  rpc Create(TenantServiceCreateRequest) returns (TenantServiceCreateResponse) {
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_EDITOR;
  }
  // List all tenants
  rpc List(TenantServiceListRequest) returns (TenantServiceListResponse) {
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_EDITOR;
    option (metalstack.api.v2.admin_roles) = ADMIN_ROLE_VIEWER;
  }
}

// TenantServiceCreateRequest is the request payload of the tenant create request
message TenantServiceCreateRequest {
  // Name of this tenant
  string name = 1 [(buf.validate.field).string = {
    min_len: 2
    max_len: 64
  }];
  // Description of this tenant
  optional string description = 2 [(buf.validate.field).string = {
    min_len: 2
    max_len: 512
  }];
  // Email of the tenant, if not set will be inherited from the creator
  optional string email = 3 [(buf.validate.field).string.email = true];
  // AvatarUrl of the tenant
  optional string avatar_url = 4;
}

// TenantServiceCreateResponse is the response payload of the tenant create request
message TenantServiceCreateResponse {
  // Tenant is the tenant
  metalstack.api.v2.Tenant tenant = 1;
}

// TenantServiceListRequest is the request payload for a tenant list request
message TenantServiceListRequest {
  // Login of the tenant to list
  optional string login = 1;
  // Name of the tenant to list
  optional string name = 2;
  // Email of the tenant to list
  optional string email = 3;
  // Paging details for the list request
  metalstack.api.v2.Paging paging = 7;
}

// TenantServiceListResponse is the response payload for a tenant list request
message TenantServiceListResponse {
  // Tenants are the list of tenants
  repeated metalstack.api.v2.Tenant tenants = 1;
  // NextPage is used for pagination, returns the next page to be fetched and must then be provided in the list request.
  optional uint64 next_page = 2;
}
